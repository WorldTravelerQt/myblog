2020-02-28 15:08:34.021  INFO 15228 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 15228 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 15:08:34.025 DEBUG 15228 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 15:08:34.025  INFO 15228 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 15:08:37.233  INFO 15228 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 4.029 seconds (JVM running for 5.129)
2020-02-28 15:08:37.460  INFO 15228 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/login;jsessionid=B967B77147EE3BC632E2CDD4EE7FF407', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()'}
2020-02-28 15:08:37.466  INFO 15228 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 15:08:43.558  INFO 15228 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login;jsessionid=B967B77147EE3BC632E2CDD4EE7FF407', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()'}
2020-02-28 15:08:43.558  INFO 15228 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 15:09:20.548  INFO 15228 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login;jsessionid=B967B77147EE3BC632E2CDD4EE7FF407', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()'}
2020-02-28 15:09:20.548  INFO 15228 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 15:09:21.715  INFO 15228 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login;jsessionid=B967B77147EE3BC632E2CDD4EE7FF407', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()'}
2020-02-28 15:09:21.715  INFO 15228 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 15:09:51.007  INFO 15228 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@76ae1b46]', 请求方法='com.scxh.controller.LoginController.doLogin()'}
2020-02-28 15:09:51.008  INFO 15228 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 15:09:51
2020-02-28 15:09:51.307 DEBUG 15228 --- [http-nio-8080-exec-5] c.s.mapper.UserMapper.getUserByExample   : ==>  Preparing: select * from t_user WHERE username= ? 
2020-02-28 15:09:51.320 DEBUG 15228 --- [http-nio-8080-exec-5] c.s.mapper.UserMapper.getUserByExample   : ==> Parameters: NigSailStar(String)
2020-02-28 15:09:51.381 DEBUG 15228 --- [http-nio-8080-exec-5] c.s.mapper.UserMapper.getUserByExample   : <==      Total: 1
2020-02-28 15:09:51.405  WARN 15228 --- [http-nio-8080-exec-5] o.a.shiro.mgt.DefaultSecurityManager     : Delegate RememberMeManager instance of type [org.apache.shiro.web.mgt.CookieRememberMeManager] threw an exception during onSuccessfulLogin.  RememberMe services will not be performed for account [User(id=1, nickname=夜航星, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=2917656453@qq.com, role=admin, avatar=, blogs=null, createTime=Tue Feb 25 18:30:08 CST 2020, modifiedTime=Tue Feb 25 18:30:13 CST 2020)].

org.apache.shiro.io.SerializationException: Unable to serialize object [User(id=1, nickname=夜航星, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=2917656453@qq.com, role=admin, avatar=, blogs=null, createTime=Tue Feb 25 18:30:08 CST 2020, modifiedTime=Tue Feb 25 18:30:13 CST 2020)].  In order for the DefaultSerializer to serialize this object, the [org.apache.shiro.subject.SimplePrincipalCollection] class must implement java.io.Serializable.
	at org.apache.shiro.io.DefaultSerializer.serialize(DefaultSerializer.java:55)
	at org.apache.shiro.mgt.AbstractRememberMeManager.serialize(AbstractRememberMeManager.java:496)
	at org.apache.shiro.mgt.AbstractRememberMeManager.convertPrincipalsToBytes(AbstractRememberMeManager.java:350)
	at org.apache.shiro.mgt.AbstractRememberMeManager.rememberIdentity(AbstractRememberMeManager.java:336)
	at org.apache.shiro.mgt.AbstractRememberMeManager.rememberIdentity(AbstractRememberMeManager.java:311)
	at org.apache.shiro.mgt.AbstractRememberMeManager.onSuccessfulLogin(AbstractRememberMeManager.java:287)
	at org.apache.shiro.mgt.DefaultSecurityManager.rememberMeSuccessfulLogin(DefaultSecurityManager.java:211)
	at org.apache.shiro.mgt.DefaultSecurityManager.onSuccessfulLogin(DefaultSecurityManager.java:296)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:290)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:260)
	at com.scxh.controller.LoginController.doLogin(LoginController.java:73)
	at com.scxh.controller.LoginController$$FastClassBySpringCGLIB$$96ef2a74.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.scxh.controller.LoginController$$EnhancerBySpringCGLIB$$19c36537.doLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.NotSerializableException: com.scxh.po.User
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.HashSet.writeObject(HashSet.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.LinkedHashMap.internalWriteEntries(LinkedHashMap.java:333)
	at java.util.HashMap.writeObject(HashMap.java:1363)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)
	at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:441)
	at org.apache.shiro.subject.SimplePrincipalCollection.writeObject(SimplePrincipalCollection.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.shiro.io.DefaultSerializer.serialize(DefaultSerializer.java:48)
	... 88 common frames omitted

2020-02-28 15:09:51.447  INFO 15228 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：{"url":"/admin/index"}
2020-02-28 15:09:51.460  INFO 15228 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()'}
2020-02-28 15:09:51.461  INFO 15228 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 15:11:25.448  INFO 15228 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()'}
2020-02-28 15:11:25.448  INFO 15228 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 15:11:29.448  INFO 15228 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()'}
2020-02-28 15:11:29.448  INFO 15228 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 15:11:32.367  INFO 15228 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:11:32.424 DEBUG 15228 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:11:32.425 DEBUG 15228 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 15:11:32.449 DEBUG 15228 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 15:11:32.450 DEBUG 15228 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:11:32.451 DEBUG 15228 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:11:32.452 DEBUG 15228 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:11:32.453  INFO 15228 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:11:41.069  INFO 15228 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:11:41.069  INFO 15228 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:11:56.661 ERROR 15228 --- [http-nio-8080-exec-2] .i.ControllerExceptionHandlerInterceptor : Error！ Request URL :http://localhost:8080/admin/types，Exception:org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported，
[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:201)
 org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:421)
 org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:367)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getHandlerInternal(RequestMappingHandlerMapping.java:449)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getHandlerInternal(RequestMappingHandlerMapping.java:67)
 org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:395)
 org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
 org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
 org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 15:11:56.661  WARN 15228 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-02-28 15:13:15.390  INFO 15228 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:13:15.391  INFO 15228 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:13:24.017  INFO 15228 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:13:24.021 DEBUG 15228 --- [http-nio-8080-exec-7] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:13:24.021 DEBUG 15228 --- [http-nio-8080-exec-7] countTypes     : ==> Parameters:
2020-02-28 15:13:24.022 DEBUG 15228 --- [http-nio-8080-exec-7] countTypes     : <==      Total: 1
2020-02-28 15:13:24.022 DEBUG 15228 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:13:24.022 DEBUG 15228 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:13:24.025 DEBUG 15228 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:13:24.025  INFO 15228 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:13:25.217  INFO 15228 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:13:25.217  INFO 15228 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:13:26.054  INFO 15228 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:13:26.054 DEBUG 15228 --- [http-nio-8080-exec-6] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:13:26.055 DEBUG 15228 --- [http-nio-8080-exec-6] countTypes     : ==> Parameters:
2020-02-28 15:13:26.056 DEBUG 15228 --- [http-nio-8080-exec-6] countTypes     : <==      Total: 1
2020-02-28 15:13:26.056 DEBUG 15228 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:13:26.057 DEBUG 15228 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:13:26.058 DEBUG 15228 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:13:26.059  INFO 15228 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:13:26.706  INFO 15228 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:13:26.706  INFO 15228 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:13:28.184  INFO 15228 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:13:28.185 DEBUG 15228 --- [http-nio-8080-exec-7] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:13:28.185 DEBUG 15228 --- [http-nio-8080-exec-7] countTypes     : ==> Parameters:
2020-02-28 15:13:28.186 DEBUG 15228 --- [http-nio-8080-exec-7] countTypes     : <==      Total: 1
2020-02-28 15:13:28.186 DEBUG 15228 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:13:28.186 DEBUG 15228 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:13:28.187 DEBUG 15228 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:13:28.188  INFO 15228 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:13:28.776  INFO 15228 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:13:28.776  INFO 15228 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:13:29.618  INFO 15228 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:13:29.619 DEBUG 15228 --- [http-nio-8080-exec-10] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:13:29.619 DEBUG 15228 --- [http-nio-8080-exec-10] countTypes     : ==> Parameters:
2020-02-28 15:13:29.620 DEBUG 15228 --- [http-nio-8080-exec-10] countTypes     : <==      Total: 1
2020-02-28 15:13:29.620 DEBUG 15228 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:13:29.620 DEBUG 15228 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:13:29.621 DEBUG 15228 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:13:29.621  INFO 15228 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:13:30.607  INFO 15228 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:13:30.607  INFO 15228 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:13:54.592  INFO 15228 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:13:54.593 DEBUG 15228 --- [http-nio-8080-exec-4] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:13:54.593 DEBUG 15228 --- [http-nio-8080-exec-4] countTypes     : ==> Parameters:
2020-02-28 15:13:54.594 DEBUG 15228 --- [http-nio-8080-exec-4] countTypes     : <==      Total: 1
2020-02-28 15:13:54.594 DEBUG 15228 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:13:54.594 DEBUG 15228 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:13:54.595 DEBUG 15228 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:13:54.596  INFO 15228 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:13:56.664  INFO 15228 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:13:56.664  INFO 15228 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:15:33.390  INFO 15228 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:15:33.390  INFO 15228 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:15:36.753  INFO 15228 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:15:36.753  INFO 15228 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:15:54.719 ERROR 15228 --- [http-nio-8080-exec-2] .i.ControllerExceptionHandlerInterceptor : Error！ Request URL :http://localhost:8080/admin/types/input，Exception:org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported，
[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:201)
 org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:421)
 org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:367)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getHandlerInternal(RequestMappingHandlerMapping.java:449)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getHandlerInternal(RequestMappingHandlerMapping.java:67)
 org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:395)
 org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 15:15:54.719  WARN 15228 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-02-28 15:17:08.649  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11684 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 15:17:08.651 DEBUG 11684 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 15:17:08.651  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 15:17:10.805  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 2.598 seconds (JVM running for 3.246)
2020-02-28 15:17:10.986  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:17:10.990  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:17:13.142  INFO 11684 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:17:13.142  INFO 11684 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:17:17.342  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:17:17.342  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:17:25.349 ERROR 11684 --- [http-nio-8080-exec-2] .i.ControllerExceptionHandlerInterceptor : Error！ Request URL :http://localhost:8080/admin/types/inputs，Exception:org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported，
[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:201)
 org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:421)
 org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:367)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getHandlerInternal(RequestMappingHandlerMapping.java:449)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getHandlerInternal(RequestMappingHandlerMapping.java:67)
 org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:395)
 org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 15:17:25.350  WARN 11684 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-02-28 15:18:32.002 ERROR 11684 --- [http-nio-8080-exec-5] .i.ControllerExceptionHandlerInterceptor : Error！ Request URL :http://localhost:8080/admin/types/inputs，Exception:org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported，
[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:201)
 org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:421)
 org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:367)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getHandlerInternal(RequestMappingHandlerMapping.java:449)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getHandlerInternal(RequestMappingHandlerMapping.java:67)
 org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:395)
 org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 15:18:32.003  WARN 11684 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-02-28 15:18:35.225  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:18:35.225  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:18:37.432  INFO 11684 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:18:37.433  INFO 11684 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:20:11.678  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11684 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 15:20:11.679 DEBUG 11684 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 15:20:11.679  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 15:20:12.368  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.719 seconds (JVM running for 184.809)
2020-02-28 15:20:12.449  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:20:12.461  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:20:22.930 ERROR 11684 --- [http-nio-8080-exec-6] .i.ControllerExceptionHandlerInterceptor : Error！ Request URL :http://localhost:8080/admin/types/input，Exception:org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'type' on field 'id': rejected value []; codes [typeMismatch.type.id,typeMismatch.id,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [type.id,id]; arguments []; default message [id]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'id'; nested exception is java.lang.NumberFormatException: For input string: ""]，
[org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:164)
 org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
 org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 15:20:22.931  WARN 11684 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'type' on field 'id': rejected value []; codes [typeMismatch.type.id,typeMismatch.id,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [type.id,id]; arguments []; default message [id]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'id'; nested exception is java.lang.NumberFormatException: For input string: ""]]
2020-02-28 15:22:08.296  INFO 11684 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:22:08.296  INFO 11684 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:22:09.612  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11684 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 15:22:09.612 DEBUG 11684 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 15:22:09.612  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 15:22:10.229  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.645 seconds (JVM running for 302.671)
2020-02-28 15:22:10.326  INFO 11684 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()'}
2020-02-28 15:22:10.328  INFO 11684 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 15:22:12.247  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[Type(id=null, name=167NotFound, blogs=null), {type=Type(id=null, name=167NotFound, blogs=null), org.springframework.validation.BindingResult.type=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]', 请求方法='com.scxh.controller.TypeController.saveType()'}
2020-02-28 15:22:12.414 DEBUG 11684 --- [http-nio-8080-exec-5] c.s.mapper.TypeMapper.getTypeByExample   : ==>  Preparing: select * from t_type WHERE `name`=? 
2020-02-28 15:22:12.427 DEBUG 11684 --- [http-nio-8080-exec-5] c.s.mapper.TypeMapper.getTypeByExample   : ==> Parameters: 167NotFound(String)
2020-02-28 15:22:12.440 DEBUG 11684 --- [http-nio-8080-exec-5] c.s.mapper.TypeMapper.getTypeByExample   : <==      Total: 0
2020-02-28 15:22:12.441 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.saveType      : ==>  Preparing: insert into t_type(name) VALUES (?); 
2020-02-28 15:22:12.442 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.saveType      : ==> Parameters: 167NotFound(String)
2020-02-28 15:22:12.443 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.saveType      : <==    Updates: 1
2020-02-28 15:22:12.530  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：redirect:/admin/types
2020-02-28 15:22:12.577  INFO 11684 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()'}
2020-02-28 15:22:12.579  INFO 11684 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 15:22:29.918  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()'}
2020-02-28 15:22:29.918  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 15:22:32.226  INFO 11684 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()'}
2020-02-28 15:22:32.226  INFO 11684 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 15:22:33.185  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()'}
2020-02-28 15:22:33.185  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 15:22:38.998  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@5d40ec56]', 请求方法='com.scxh.controller.LoginController.doLogin()'}
2020-02-28 15:22:39.000  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 15:22:38
2020-02-28 15:22:39.001 DEBUG 11684 --- [http-nio-8080-exec-2] c.s.mapper.UserMapper.getUserByExample   : ==>  Preparing: select * from t_user WHERE username= ? 
2020-02-28 15:22:39.001 DEBUG 11684 --- [http-nio-8080-exec-2] c.s.mapper.UserMapper.getUserByExample   : ==> Parameters: NigSailStar(String)
2020-02-28 15:22:39.004 DEBUG 11684 --- [http-nio-8080-exec-2] c.s.mapper.UserMapper.getUserByExample   : <==      Total: 1
2020-02-28 15:22:39.010  WARN 11684 --- [http-nio-8080-exec-2] o.a.shiro.mgt.DefaultSecurityManager     : Delegate RememberMeManager instance of type [org.apache.shiro.web.mgt.CookieRememberMeManager] threw an exception during onSuccessfulLogin.  RememberMe services will not be performed for account [User(id=1, nickname=夜航星, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=2917656453@qq.com, role=admin, avatar=, blogs=null, createTime=Tue Feb 25 18:30:08 CST 2020, modifiedTime=Tue Feb 25 18:30:13 CST 2020)].

org.apache.shiro.io.SerializationException: Unable to serialize object [User(id=1, nickname=夜航星, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=2917656453@qq.com, role=admin, avatar=, blogs=null, createTime=Tue Feb 25 18:30:08 CST 2020, modifiedTime=Tue Feb 25 18:30:13 CST 2020)].  In order for the DefaultSerializer to serialize this object, the [org.apache.shiro.subject.SimplePrincipalCollection] class must implement java.io.Serializable.
	at org.apache.shiro.io.DefaultSerializer.serialize(DefaultSerializer.java:55)
	at org.apache.shiro.mgt.AbstractRememberMeManager.serialize(AbstractRememberMeManager.java:496)
	at org.apache.shiro.mgt.AbstractRememberMeManager.convertPrincipalsToBytes(AbstractRememberMeManager.java:350)
	at org.apache.shiro.mgt.AbstractRememberMeManager.rememberIdentity(AbstractRememberMeManager.java:336)
	at org.apache.shiro.mgt.AbstractRememberMeManager.rememberIdentity(AbstractRememberMeManager.java:311)
	at org.apache.shiro.mgt.AbstractRememberMeManager.onSuccessfulLogin(AbstractRememberMeManager.java:287)
	at org.apache.shiro.mgt.DefaultSecurityManager.rememberMeSuccessfulLogin(DefaultSecurityManager.java:211)
	at org.apache.shiro.mgt.DefaultSecurityManager.onSuccessfulLogin(DefaultSecurityManager.java:296)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:290)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:260)
	at com.scxh.controller.LoginController.doLogin(LoginController.java:73)
	at com.scxh.controller.LoginController$$FastClassBySpringCGLIB$$96ef2a74.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.scxh.controller.LoginController$$EnhancerBySpringCGLIB$$5abff888.doLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.NotSerializableException: com.scxh.po.User
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.HashSet.writeObject(HashSet.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.LinkedHashMap.internalWriteEntries(LinkedHashMap.java:333)
	at java.util.HashMap.writeObject(HashMap.java:1363)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)
	at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:441)
	at org.apache.shiro.subject.SimplePrincipalCollection.writeObject(SimplePrincipalCollection.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.shiro.io.DefaultSerializer.serialize(DefaultSerializer.java:48)
	... 88 common frames omitted

2020-02-28 15:22:39.035  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：{"url":"/admin/index"}
2020-02-28 15:22:39.047  INFO 11684 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()'}
2020-02-28 15:22:39.047  INFO 11684 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 15:22:40.597  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:22:40.597 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:22:40.597 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==> Parameters:
2020-02-28 15:22:40.599 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : <==      Total: 1
2020-02-28 15:22:40.601 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:22:40.601 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:22:40.602 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:22:40.602  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:22:42.334  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/2', 请求参数='[{}, 2]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:22:42.335 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:22:42.335 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 15:22:42.335 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 15:22:42.336 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:22:42.336 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 6(Integer)
2020-02-28 15:22:42.337 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 3
2020-02-28 15:22:42.337  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:22:43.885  INFO 11684 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:22:43.885 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:22:43.885 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : ==> Parameters:
2020-02-28 15:22:43.886 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : <==      Total: 1
2020-02-28 15:22:43.886 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:22:43.886 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:22:43.888 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:22:43.888  INFO 11684 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:22:44.687  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/2', 请求参数='[{}, 2]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:22:44.688 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:22:44.688 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 15:22:44.689 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 15:22:44.689 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:22:44.690 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 6(Integer)
2020-02-28 15:22:44.691 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 3
2020-02-28 15:22:44.691  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:24:45.163  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:24:45.168 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:24:45.169 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 15:24:45.169 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 15:24:45.170 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:24:45.170 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:24:45.171 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:24:45.171  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:24:46.684  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/2', 请求参数='[{}, 2]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:24:46.685 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:24:46.685 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 15:24:46.685 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 15:24:46.686 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:24:46.686 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 6(Integer)
2020-02-28 15:24:46.687 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 3
2020-02-28 15:24:46.687  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:24:48.133  INFO 11684 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:24:48.134 DEBUG 11684 --- [http-nio-8080-exec-7] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:24:48.134 DEBUG 11684 --- [http-nio-8080-exec-7] countTypes     : ==> Parameters:
2020-02-28 15:24:48.135 DEBUG 11684 --- [http-nio-8080-exec-7] countTypes     : <==      Total: 1
2020-02-28 15:24:48.135 DEBUG 11684 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:24:48.135 DEBUG 11684 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:24:48.137 DEBUG 11684 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:24:48.137  INFO 11684 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:25:28.751  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:25:28.752 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:25:28.752 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 15:25:28.753 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 15:25:28.753 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:25:28.753 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:25:28.754 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:25:28.755  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:25:30.181  INFO 11684 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:25:30.181 DEBUG 11684 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:25:30.181 DEBUG 11684 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 15:25:30.182 DEBUG 11684 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 15:25:30.182 DEBUG 11684 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:25:30.182 DEBUG 11684 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:25:30.183 DEBUG 11684 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:25:30.183  INFO 11684 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:25:31.573  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:25:31.573 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:25:31.573 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 15:25:31.574 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 15:25:31.574 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:25:31.574 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 6(Integer), 0(Integer)
2020-02-28 15:25:31.575 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 15:25:31.575  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:25:32.617  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11684 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 15:25:32.617 DEBUG 11684 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 15:25:32.617  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 15:25:32.956  WARN 11684 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Cannot deserialize session attribute [org.apache.shiro.subject.support.DefaultSubjectContext_PRINCIPALS_SESSION_KEY] for session [0EFFC90A87D6E00CCC46DDF1B2CDC85F]
2020-02-28 15:25:33.243  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.651 seconds (JVM running for 505.685)
2020-02-28 15:25:33.300  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:25:33.331 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:25:33.331 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==> Parameters:
2020-02-28 15:25:33.333 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : <==      Total: 1
2020-02-28 15:25:33.334 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:25:33.334 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:25:33.335 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:25:33.336  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:25:36.548  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/2', 请求参数='[{}, 2]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:25:36.548 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:25:36.548 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 15:25:36.549 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 15:25:36.549 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:25:36.549 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 8(Integer)
2020-02-28 15:25:36.550 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 15:25:36.550  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:25:37.950  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:25:37.950 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:25:37.950 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 15:25:37.951 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 15:25:37.951 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:25:37.951 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:25:37.953 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:25:37.953  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:25:39.074  INFO 11684 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/2', 请求参数='[{}, 2]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:25:39.074 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:25:39.074 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 15:25:39.075 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 15:25:39.075 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:25:39.075 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 8(Integer)
2020-02-28 15:25:39.076 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 15:25:39.076  INFO 11684 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:25:40.820  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:25:40.821 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:25:40.821 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 15:25:40.821 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 15:25:40.822 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:25:40.822 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:25:40.822 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:25:40.823  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:28:12.566  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11684 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 15:28:12.567 DEBUG 11684 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 15:28:12.567  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 15:28:13.165  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.624 seconds (JVM running for 665.606)
2020-02-28 15:38:07.175  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11684 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 15:38:07.176 DEBUG 11684 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 15:38:07.176  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 15:38:07.788  INFO 11684 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.637 seconds (JVM running for 1260.229)
2020-02-28 15:44:19.730  INFO 11684 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:44:19.761 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:44:19.762 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 15:44:19.763 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 15:44:19.764 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:44:19.764 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:44:19.765 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:44:19.765  INFO 11684 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:44:21.332  INFO 11684 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:44:21.332 DEBUG 11684 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:44:21.332 DEBUG 11684 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 15:44:21.333 DEBUG 11684 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 15:44:21.333 DEBUG 11684 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:44:21.333 DEBUG 11684 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:44:21.335 DEBUG 11684 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:44:21.335  INFO 11684 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:45:16.145  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:45:16.145 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:45:16.145 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 15:45:16.146 DEBUG 11684 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 15:45:16.146 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:45:16.146 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:45:16.147 DEBUG 11684 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:45:16.147  INFO 11684 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:45:17.529  INFO 11684 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:45:17.529 DEBUG 11684 --- [http-nio-8080-exec-7] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:45:17.529 DEBUG 11684 --- [http-nio-8080-exec-7] countTypes     : ==> Parameters:
2020-02-28 15:45:17.530 DEBUG 11684 --- [http-nio-8080-exec-7] countTypes     : <==      Total: 1
2020-02-28 15:45:17.530 DEBUG 11684 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:45:17.530 DEBUG 11684 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:45:17.531 DEBUG 11684 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:45:17.531  INFO 11684 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:45:17.630 ERROR 11684 --- [http-nio-8080-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-7] Exception processing template "/admin/types": An error happened during template parsing (template: "class path resource [templates//admin/types.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates//admin/types.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "removeType(${type.getId()})" (template: "/admin/types" - line 47, col 21)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 57 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "removeType(${type.getId()})" (template: "/admin/types" - line 47, col 21)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor.doProcess(StandardDOMEventAttributeTagProcessor.java:214)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 59 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: Expression [removeType(${type.getId()})] @12: EL1043E: Unexpected token. Expected 'rparen())' but was 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.internalException(InternalSpelExpressionParser.java:1041)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatToken(InternalSpelExpressionParser.java:923)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.maybeEatMethodArgs(InternalSpelExpressionParser.java:442)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.maybeEatMethodOrProperty(InternalSpelExpressionParser.java:760)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatStartNode(InternalSpelExpressionParser.java:510)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatPrimaryExpression(InternalSpelExpressionParser.java:350)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatUnaryExpression(InternalSpelExpressionParser.java:344)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatPowerIncDecExpression(InternalSpelExpressionParser.java:303)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatProductExpression(InternalSpelExpressionParser.java:281)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatSumExpression(InternalSpelExpressionParser.java:263)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatRelationalExpression(InternalSpelExpressionParser.java:218)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatLogicalAndExpression(InternalSpelExpressionParser.java:205)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatLogicalOrExpression(InternalSpelExpressionParser.java:192)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatExpression(InternalSpelExpressionParser.java:153)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:131)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:360)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:311)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:180)
	... 84 common frames omitted

2020-02-28 15:45:17.633 ERROR 11684 --- [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates//admin/types.html]")] with root cause

org.springframework.expression.spel.SpelParseException: Expression [removeType(${type.getId()})] @12: EL1043E: Unexpected token. Expected 'rparen())' but was 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.internalException(InternalSpelExpressionParser.java:1041)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatToken(InternalSpelExpressionParser.java:923)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.maybeEatMethodArgs(InternalSpelExpressionParser.java:442)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.maybeEatMethodOrProperty(InternalSpelExpressionParser.java:760)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatStartNode(InternalSpelExpressionParser.java:510)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatPrimaryExpression(InternalSpelExpressionParser.java:350)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatUnaryExpression(InternalSpelExpressionParser.java:344)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatPowerIncDecExpression(InternalSpelExpressionParser.java:303)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatProductExpression(InternalSpelExpressionParser.java:281)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatSumExpression(InternalSpelExpressionParser.java:263)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatRelationalExpression(InternalSpelExpressionParser.java:218)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatLogicalAndExpression(InternalSpelExpressionParser.java:205)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatLogicalOrExpression(InternalSpelExpressionParser.java:192)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatExpression(InternalSpelExpressionParser.java:153)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:131)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:360)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:311)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:180)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor.doProcess(StandardDOMEventAttributeTagProcessor.java:214)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 15:47:19.735  INFO 11684 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:47:19.738 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:47:19.738 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 15:47:19.739 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 15:47:19.739 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:47:19.739 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:47:19.740 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:47:19.740  INFO 11684 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:51:48.690  INFO 11684 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:51:48.693 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:51:48.693 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : ==> Parameters:
2020-02-28 15:51:48.694 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : <==      Total: 1
2020-02-28 15:51:48.694 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:51:48.694 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:51:48.695 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:51:48.695  INFO 11684 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:51:50.186  INFO 11684 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:51:50.187 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:51:50.187 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 15:51:50.187 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 15:51:50.188 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:51:50.188 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:51:50.189 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:51:50.189  INFO 11684 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:53:11.017  INFO 11684 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:53:11.020 DEBUG 11684 --- [http-nio-8080-exec-4] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:53:11.020 DEBUG 11684 --- [http-nio-8080-exec-4] countTypes     : ==> Parameters:
2020-02-28 15:53:11.021 DEBUG 11684 --- [http-nio-8080-exec-4] countTypes     : <==      Total: 1
2020-02-28 15:53:11.021 DEBUG 11684 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:53:11.021 DEBUG 11684 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:53:11.022 DEBUG 11684 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:53:11.022  INFO 11684 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:53:12.063  INFO 11684 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:53:12.063 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:53:12.063 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : ==> Parameters:
2020-02-28 15:53:12.064 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : <==      Total: 1
2020-02-28 15:53:12.064 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:53:12.064 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:53:12.065 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:53:12.065  INFO 11684 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:55:54.324  INFO 11684 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:55:54.327 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:55:54.327 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 15:55:54.328 DEBUG 11684 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 15:55:54.328 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:55:54.328 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:55:54.328 DEBUG 11684 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:55:54.329  INFO 11684 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:55:55.479  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:55:55.479 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:55:55.479 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==> Parameters:
2020-02-28 15:55:55.480 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : <==      Total: 1
2020-02-28 15:55:55.480 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:55:55.480 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:55:55.481 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:55:55.481  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:56:50.495  INFO 11684 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:56:50.495 DEBUG 11684 --- [http-nio-8080-exec-10] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:56:50.496 DEBUG 11684 --- [http-nio-8080-exec-10] countTypes     : ==> Parameters:
2020-02-28 15:56:50.496 DEBUG 11684 --- [http-nio-8080-exec-10] countTypes     : <==      Total: 1
2020-02-28 15:56:50.497 DEBUG 11684 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:56:50.497 DEBUG 11684 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:56:50.497 DEBUG 11684 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:56:50.498  INFO 11684 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:56:52.908  INFO 11684 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:56:52.909 DEBUG 11684 --- [http-nio-8080-exec-7] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:56:52.909 DEBUG 11684 --- [http-nio-8080-exec-7] countTypes     : ==> Parameters:
2020-02-28 15:56:52.910 DEBUG 11684 --- [http-nio-8080-exec-7] countTypes     : <==      Total: 1
2020-02-28 15:56:52.910 DEBUG 11684 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:56:52.910 DEBUG 11684 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:56:52.911 DEBUG 11684 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:56:52.911  INFO 11684 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:57:06.544  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:57:06.544 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:57:06.545 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==> Parameters:
2020-02-28 15:57:06.545 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : <==      Total: 1
2020-02-28 15:57:06.546 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:57:06.546 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:57:06.547 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:57:06.547  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:57:15.754  INFO 11684 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/7', 请求参数='[{}, 7]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:57:15.754 DEBUG 11684 --- [http-nio-8080-exec-10] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:57:15.754 DEBUG 11684 --- [http-nio-8080-exec-10] countTypes     : ==> Parameters:
2020-02-28 15:57:15.755 DEBUG 11684 --- [http-nio-8080-exec-10] countTypes     : <==      Total: 1
2020-02-28 15:57:15.755 DEBUG 11684 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:57:15.755 DEBUG 11684 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 48(Integer)
2020-02-28 15:57:15.756 DEBUG 11684 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 0
2020-02-28 15:57:15.756  INFO 11684 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:57:19.974  INFO 11684 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/6', 请求参数='[{}, 6]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:57:19.974 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:57:19.974 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : ==> Parameters:
2020-02-28 15:57:19.975 DEBUG 11684 --- [http-nio-8080-exec-6] countTypes     : <==      Total: 1
2020-02-28 15:57:19.976 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:57:19.976 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 40(Integer)
2020-02-28 15:57:19.977 DEBUG 11684 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 0
2020-02-28 15:57:19.978  INFO 11684 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:57:23.180  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/5', 请求参数='[{}, 5]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:57:23.181 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:57:23.181 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==> Parameters:
2020-02-28 15:57:23.182 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : <==      Total: 1
2020-02-28 15:57:23.182 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:57:23.182 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 32(Integer)
2020-02-28 15:57:23.183 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 0
2020-02-28 15:57:23.183  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:57:25.805  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/4', 请求参数='[{}, 4]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:57:25.806 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:57:25.806 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 15:57:25.806 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 15:57:25.807 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:57:25.807 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 24(Integer)
2020-02-28 15:57:25.807 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 0
2020-02-28 15:57:25.807  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:57:26.431  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/3', 请求参数='[{}, 3]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:57:26.431 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:57:26.431 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 15:57:26.432 DEBUG 11684 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 15:57:26.432 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:57:26.432 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 16(Integer)
2020-02-28 15:57:26.433 DEBUG 11684 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 0
2020-02-28 15:57:26.433  INFO 11684 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:57:26.960  INFO 11684 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/2', 请求参数='[{}, 2]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:57:26.960 DEBUG 11684 --- [http-nio-8080-exec-10] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:57:26.961 DEBUG 11684 --- [http-nio-8080-exec-10] countTypes     : ==> Parameters:
2020-02-28 15:57:26.961 DEBUG 11684 --- [http-nio-8080-exec-10] countTypes     : <==      Total: 1
2020-02-28 15:57:26.961 DEBUG 11684 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:57:26.961 DEBUG 11684 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 8(Integer)
2020-02-28 15:57:26.962 DEBUG 11684 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 15:57:26.962  INFO 11684 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:57:28.290  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:57:28.290 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:57:28.290 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==> Parameters:
2020-02-28 15:57:28.291 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : <==      Total: 1
2020-02-28 15:57:28.291 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:57:28.291 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:57:28.292 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:57:28.292  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:57:29.853  INFO 11684 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:57:29.853 DEBUG 11684 --- [http-nio-8080-exec-4] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:57:29.854 DEBUG 11684 --- [http-nio-8080-exec-4] countTypes     : ==> Parameters:
2020-02-28 15:57:29.854 DEBUG 11684 --- [http-nio-8080-exec-4] countTypes     : <==      Total: 1
2020-02-28 15:57:29.855 DEBUG 11684 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:57:29.855 DEBUG 11684 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:57:29.855 DEBUG 11684 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:57:29.856  INFO 11684 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:57:31.926  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/2', 请求参数='[{}, 2]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:57:31.926 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:57:31.926 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 15:57:31.927 DEBUG 11684 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 15:57:31.927 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:57:31.927 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 8(Integer)
2020-02-28 15:57:31.928 DEBUG 11684 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 15:57:31.928  INFO 11684 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:57:34.373  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:57:34.374 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:57:34.374 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : ==> Parameters:
2020-02-28 15:57:34.375 DEBUG 11684 --- [http-nio-8080-exec-8] countTypes     : <==      Total: 1
2020-02-28 15:57:34.375 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:57:34.375 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:57:34.376 DEBUG 11684 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:57:34.376  INFO 11684 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:59:24.532  INFO 2712 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 2712 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 15:59:24.535 DEBUG 2712 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 15:59:24.535  INFO 2712 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 15:59:26.893  INFO 2712 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 2.866 seconds (JVM running for 4.094)
2020-02-28 15:59:37.646  INFO 2712 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:59:34.760  INFO 2712 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 15:59:37.843 DEBUG 2712 --- [http-nio-8080-exec-7] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:59:37.858 DEBUG 2712 --- [http-nio-8080-exec-7] countTypes     : ==> Parameters:
2020-02-28 15:59:37.863 DEBUG 2712 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 15:59:37.863 DEBUG 2712 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 15:59:37.877 DEBUG 2712 --- [http-nio-8080-exec-7] countTypes     : <==      Total: 1
2020-02-28 15:59:37.877 DEBUG 2712 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 15:59:39.214 DEBUG 2712 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:59:39.214 DEBUG 2712 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 15:59:39.215 DEBUG 2712 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:59:39.215 DEBUG 2712 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 15:59:39.219 DEBUG 2712 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:59:39.220 DEBUG 2712 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 15:59:39.220  INFO 2712 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 15:59:39.220  INFO 2712 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:00:08.907  INFO 2712 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/3', 请求参数='[{}, 3]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:00:11.722 DEBUG 2712 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:00:11.723 DEBUG 2712 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 16:00:11.724 DEBUG 2712 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 16:01:04.347 DEBUG 2712 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:01:04.347 DEBUG 2712 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 16(Integer)
2020-02-28 16:01:04.349 DEBUG 2712 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 0
2020-02-28 16:01:04.351  INFO 2712 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:01:30.582  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11648 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:01:30.584 DEBUG 11648 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:01:30.584  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:01:32.751  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 2.585 seconds (JVM running for 3.255)
2020-02-28 16:01:32.850  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/3', 请求参数='[{}, 3]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:01:33.006 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:01:33.019 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:01:33.035 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:01:33.037 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:01:33.037 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 8(Integer)
2020-02-28 16:01:33.039 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:01:33.040  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:01:36.696  INFO 11648 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/5', 请求参数='[{}, 5]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:01:36.697 DEBUG 11648 --- [http-nio-8080-exec-4] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:01:36.697 DEBUG 11648 --- [http-nio-8080-exec-4] countTypes     : ==> Parameters:
2020-02-28 16:01:36.698 DEBUG 11648 --- [http-nio-8080-exec-4] countTypes     : <==      Total: 1
2020-02-28 16:01:36.698 DEBUG 11648 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:01:36.699 DEBUG 11648 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 8(Integer)
2020-02-28 16:01:36.699 DEBUG 11648 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:01:36.700  INFO 11648 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:01:38.568  INFO 11648 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/4', 请求参数='[{}, 4]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:01:38.568 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:01:38.569 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 16:01:38.569 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 16:01:38.570 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:01:38.570 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 8(Integer)
2020-02-28 16:01:38.571 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:01:38.571  INFO 11648 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:01:40.799  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/0', 请求参数='[{}, 0]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:01:40.800 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:01:40.800 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:01:40.801 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:01:40.801 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:01:40.801 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), -8(Integer)
2020-02-28 16:01:40.873 ERROR 11648 --- [http-nio-8080-exec-3] .i.ControllerExceptionHandlerInterceptor : Error！ Request URL :http://localhost:8080/admin/types/0，Exception:org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
### The error may exist in file [C:\Users\血与酒\IdeaProjects\myblog\target\classes\mybatis\mapper\TypeMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select *         from t_type         limit ? offSet ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3，
[org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
 org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
 org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
 org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
 com.sun.proxy.$Proxy76.selectList(Unknown Source)
 org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
 org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
 org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
 org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
 com.sun.proxy.$Proxy87.getTypeList(Unknown Source)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
 org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
 com.sun.proxy.$Proxy88.getTypeList(Unknown Source)
 com.scxh.service.impl.TypeServiceImpl.getTypeList(TypeServiceImpl.java:70)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$a30051c5.getTypeList(<generated>)
 com.scxh.controller.TypeController.typesPage(TypeController.java:35)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$1b760c8f.typesPage(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:01:40.873  WARN 11648 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
### The error may exist in file [C:\Users\血与酒\IdeaProjects\myblog\target\classes\mybatis\mapper\TypeMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select *         from t_type         limit ? offSet ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3]
2020-02-28 16:02:07.800  INFO 11648 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/0', 请求参数='[{}, 0]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:02:07.800 DEBUG 11648 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:02:07.801 DEBUG 11648 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 16:02:07.802 DEBUG 11648 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 16:02:07.802 DEBUG 11648 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:02:07.803 DEBUG 11648 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), -8(Integer)
2020-02-28 16:02:07.804 ERROR 11648 --- [http-nio-8080-exec-2] .i.ControllerExceptionHandlerInterceptor : Error！ Request URL :http://localhost:8080/admin/types/0，Exception:org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
### The error may exist in file [C:\Users\血与酒\IdeaProjects\myblog\target\classes\mybatis\mapper\TypeMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select *         from t_type         limit ? offSet ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3，
[org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
 org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
 org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
 org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
 com.sun.proxy.$Proxy76.selectList(Unknown Source)
 org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
 org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
 org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
 org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
 com.sun.proxy.$Proxy87.getTypeList(Unknown Source)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
 org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
 com.sun.proxy.$Proxy88.getTypeList(Unknown Source)
 com.scxh.service.impl.TypeServiceImpl.getTypeList(TypeServiceImpl.java:70)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$a30051c5.getTypeList(<generated>)
 com.scxh.controller.TypeController.typesPage(TypeController.java:35)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$1b760c8f.typesPage(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:02:07.804  WARN 11648 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
### The error may exist in file [C:\Users\血与酒\IdeaProjects\myblog\target\classes\mybatis\mapper\TypeMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select *         from t_type         limit ? offSet ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3]
2020-02-28 16:02:08.784  INFO 11648 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/0', 请求参数='[{}, 0]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:02:08.784 DEBUG 11648 --- [http-nio-8080-exec-7] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:02:08.785 DEBUG 11648 --- [http-nio-8080-exec-7] countTypes     : ==> Parameters:
2020-02-28 16:02:08.786 DEBUG 11648 --- [http-nio-8080-exec-7] countTypes     : <==      Total: 1
2020-02-28 16:02:08.786 DEBUG 11648 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:02:08.786 DEBUG 11648 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), -8(Integer)
2020-02-28 16:02:08.787 ERROR 11648 --- [http-nio-8080-exec-7] .i.ControllerExceptionHandlerInterceptor : Error！ Request URL :http://localhost:8080/admin/types/0，Exception:org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
### The error may exist in file [C:\Users\血与酒\IdeaProjects\myblog\target\classes\mybatis\mapper\TypeMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select *         from t_type         limit ? offSet ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3，
[org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
 org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
 org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
 org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
 com.sun.proxy.$Proxy76.selectList(Unknown Source)
 org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
 org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
 org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
 org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
 com.sun.proxy.$Proxy87.getTypeList(Unknown Source)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
 org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
 com.sun.proxy.$Proxy88.getTypeList(Unknown Source)
 com.scxh.service.impl.TypeServiceImpl.getTypeList(TypeServiceImpl.java:70)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$a30051c5.getTypeList(<generated>)
 com.scxh.controller.TypeController.typesPage(TypeController.java:35)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$1b760c8f.typesPage(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:02:08.788  WARN 11648 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
### The error may exist in file [C:\Users\血与酒\IdeaProjects\myblog\target\classes\mybatis\mapper\TypeMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select *         from t_type         limit ? offSet ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-8' at line 3]
2020-02-28 16:02:09.414  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11648 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:02:09.414 DEBUG 11648 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:02:09.414  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:02:10.043  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.656 seconds (JVM running for 40.546)
2020-02-28 16:02:10.242  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/0', 请求参数='[{}, 0]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:02:10.273 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:02:10.273 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:02:10.275 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:02:10.276 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:02:10.276 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:02:10.277 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:02:10.277  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:02:34.190  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/0', 请求参数='[{}, 0]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:02:34.190 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:02:34.191 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:02:34.192 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:02:34.193 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:02:34.193 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:02:34.197 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:02:34.197  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:02:35.431  INFO 11648 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/0', 请求参数='[{}, 0]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:02:35.433 DEBUG 11648 --- [http-nio-8080-exec-8] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:02:35.434 DEBUG 11648 --- [http-nio-8080-exec-8] countTypes     : ==> Parameters:
2020-02-28 16:02:35.436 DEBUG 11648 --- [http-nio-8080-exec-8] countTypes     : <==      Total: 1
2020-02-28 16:02:35.437 DEBUG 11648 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:02:35.437 DEBUG 11648 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:02:35.438 DEBUG 11648 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:02:35.438  INFO 11648 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:02:37.531  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11648 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:02:37.532 DEBUG 11648 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:02:37.532  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:02:38.248  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.742 seconds (JVM running for 68.751)
2020-02-28 16:02:38.403  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/0', 请求参数='[{}, 0]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:02:38.434 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:02:38.434 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:02:38.437 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:02:38.438 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:02:38.438 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:02:38.439 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:02:38.440  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:02:47.090  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/2', 请求参数='[{}, 2]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:02:47.091 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:02:47.091 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:02:47.092 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:02:47.093 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:02:47.093 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 8(Integer)
2020-02-28 16:02:47.094 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:02:47.094  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:02:48.779  INFO 11648 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:02:48.780 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:02:48.780 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : ==> Parameters:
2020-02-28 16:02:48.781 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : <==      Total: 1
2020-02-28 16:02:48.782 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:02:48.782 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:02:48.783 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:02:48.784  INFO 11648 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:07:45.787  INFO 11648 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:07:45.792 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:07:45.793 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 16:07:45.793 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 16:07:45.794 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:07:45.794 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:07:45.795 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:07:45.795  INFO 11648 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:08:17.784  INFO 11648 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:08:17.785 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:08:17.785 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : ==> Parameters:
2020-02-28 16:08:17.786 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : <==      Total: 1
2020-02-28 16:08:17.787 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:08:17.787 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:08:17.788 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:08:17.788  INFO 11648 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:08:24.453  INFO 11648 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:08:24.453 DEBUG 11648 --- [http-nio-8080-exec-8] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:08:24.453 DEBUG 11648 --- [http-nio-8080-exec-8] countTypes     : ==> Parameters:
2020-02-28 16:08:24.454 DEBUG 11648 --- [http-nio-8080-exec-8] countTypes     : <==      Total: 1
2020-02-28 16:08:24.454 DEBUG 11648 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:08:24.454 DEBUG 11648 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:08:24.455 DEBUG 11648 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:08:24.455  INFO 11648 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:08:24.775  INFO 11648 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:08:24.775 DEBUG 11648 --- [http-nio-8080-exec-4] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:08:24.775 DEBUG 11648 --- [http-nio-8080-exec-4] countTypes     : ==> Parameters:
2020-02-28 16:08:24.776 DEBUG 11648 --- [http-nio-8080-exec-4] countTypes     : <==      Total: 1
2020-02-28 16:08:24.777 DEBUG 11648 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:08:24.777 DEBUG 11648 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:08:24.778 DEBUG 11648 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:08:24.778  INFO 11648 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:08:25.092  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:08:25.092 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:08:25.092 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:08:25.093 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:08:25.093 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:08:25.093 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:08:25.094 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:08:25.095  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:08:25.113  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:08:25.113 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:08:25.113 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:08:25.114 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:08:25.114 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:08:25.114 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:08:25.115 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:08:25.115  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:08:25.265  INFO 11648 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:08:25.266 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:08:25.266 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : ==> Parameters:
2020-02-28 16:08:25.267 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : <==      Total: 1
2020-02-28 16:08:25.267 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:08:25.267 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:08:25.268 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:08:25.268  INFO 11648 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:08:25.463  INFO 11648 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:08:25.464 DEBUG 11648 --- [http-nio-8080-exec-10] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:08:25.464 DEBUG 11648 --- [http-nio-8080-exec-10] countTypes     : ==> Parameters:
2020-02-28 16:08:25.464 DEBUG 11648 --- [http-nio-8080-exec-10] countTypes     : <==      Total: 1
2020-02-28 16:08:25.465 DEBUG 11648 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:08:25.465 DEBUG 11648 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:08:25.466 DEBUG 11648 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:08:25.466  INFO 11648 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:08:25.664  INFO 11648 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:08:25.664 DEBUG 11648 --- [http-nio-8080-exec-4] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:08:25.664 DEBUG 11648 --- [http-nio-8080-exec-4] countTypes     : ==> Parameters:
2020-02-28 16:08:25.664 DEBUG 11648 --- [http-nio-8080-exec-4] countTypes     : <==      Total: 1
2020-02-28 16:08:25.664 DEBUG 11648 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:08:25.665 DEBUG 11648 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:08:25.666 DEBUG 11648 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:08:25.666  INFO 11648 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:08:25.824  INFO 11648 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:08:25.825 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:08:25.825 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 16:08:25.825 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 16:08:25.826 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:08:25.826 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:08:25.827 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:08:25.827  INFO 11648 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:08:31.890  INFO 11648 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:08:31.891 DEBUG 11648 --- [http-nio-8080-exec-7] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:08:31.891 DEBUG 11648 --- [http-nio-8080-exec-7] countTypes     : ==> Parameters:
2020-02-28 16:08:31.892 DEBUG 11648 --- [http-nio-8080-exec-7] countTypes     : <==      Total: 1
2020-02-28 16:08:31.892 DEBUG 11648 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:08:31.893 DEBUG 11648 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:08:31.894 DEBUG 11648 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:08:31.894  INFO 11648 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:11:20.316  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:11:20.320 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:11:20.320 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:11:20.320 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:11:20.321 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:11:20.321 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:11:20.322 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:11:20.322  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:11:21.452  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:11:21.453 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:11:21.453 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:11:21.453 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:11:21.454 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:11:21.454 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:11:21.455 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:11:21.455  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:11:24.726  INFO 11648 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:11:24.726 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:11:24.727 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : ==> Parameters:
2020-02-28 16:11:24.727 DEBUG 11648 --- [http-nio-8080-exec-6] countTypes     : <==      Total: 1
2020-02-28 16:11:24.728 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:11:24.728 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:11:24.728 DEBUG 11648 --- [http-nio-8080-exec-6] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:11:24.728  INFO 11648 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:11:27.114  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:11:27.115 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:11:27.115 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:11:27.116 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:11:27.116 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:11:27.116 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:11:27.117 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:11:27.117  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:12:28.528  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:12:28.532 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:12:28.532 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:12:28.533 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:12:28.533 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:12:28.533 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:12:28.534 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:12:28.535  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:12:36.766 ERROR 11648 --- [http-nio-8080-exec-3] .i.ControllerExceptionHandlerInterceptor : Error！ Request URL :http://localhost:8080/admin/types/input，Exception:org.springframework.web.bind.MissingServletRequestParameterException: Required Integer parameter 'id' is not present，
[org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
 org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
 org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
 org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:12:36.767  WARN 11648 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required Integer parameter 'id' is not present]
2020-02-28 16:12:38.780 ERROR 11648 --- [http-nio-8080-exec-10] .i.ControllerExceptionHandlerInterceptor : Error！ Request URL :http://localhost:8080/admin/types/input，Exception:org.springframework.web.bind.MissingServletRequestParameterException: Required Integer parameter 'id' is not present，
[org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
 org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
 org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
 org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:12:38.781  WARN 11648 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required Integer parameter 'id' is not present]
2020-02-28 16:13:09.549  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11648 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:13:09.549 DEBUG 11648 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:13:09.549  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:13:10.309  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.784 seconds (JVM running for 700.813)
2020-02-28 16:13:14.591  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:13:14.620 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:13:14.620 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:13:14.622 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:13:14.623 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:13:14.623 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:13:14.624 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:13:14.624  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:13:15.773  INFO 11648 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:13:15.773 DEBUG 11648 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:13:15.774 DEBUG 11648 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 16:13:15.774 DEBUG 11648 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 16:13:15.775 DEBUG 11648 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:13:15.775 DEBUG 11648 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:13:15.777 DEBUG 11648 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:13:15.777  INFO 11648 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:13:17.359  INFO 11648 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:13:17.360 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:13:17.360 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 16:13:17.361 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 16:13:17.361 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:13:17.361 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:13:17.362 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:13:17.362  INFO 11648 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:13:19.475  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[null]', 请求方法='com.scxh.controller.TypeController.removeType()'}
2020-02-28 16:13:19.476 DEBUG 11648 --- [http-nio-8080-exec-1] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:13:19.476 DEBUG 11648 --- [http-nio-8080-exec-1] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: null
2020-02-28 16:13:19.477 DEBUG 11648 --- [http-nio-8080-exec-1] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 0
2020-02-28 16:13:19.478 ERROR 11648 --- [http-nio-8080-exec-1] .i.ControllerExceptionHandlerInterceptor : Error！ Request URL :http://localhost:8080/admin/types/input，Exception:java.lang.RuntimeException: 不存在该分类！，
[com.scxh.service.impl.TypeServiceImpl.removeTypeById(TypeServiceImpl.java:57)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$a30051c5.removeTypeById(<generated>)
 com.scxh.controller.TypeController.removeType(TypeController.java:61)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$1b760c8f.removeType(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:13:19.478  WARN 11648 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 不存在该分类！]
2020-02-28 16:14:56.673  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11648 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:14:56.673 DEBUG 11648 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:14:56.673  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:14:57.291  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.642 seconds (JVM running for 807.794)
2020-02-28 16:15:25.514  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:15:25.542 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:15:25.542 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:15:25.544 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:15:25.545 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:15:25.545 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:15:25.546 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:15:25.546  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:15:28.106  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11648 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:15:28.106 DEBUG 11648 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:15:28.106  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:15:28.761  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.682 seconds (JVM running for 839.264)
2020-02-28 16:15:30.829  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:15:30.859 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:15:30.859 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:15:30.861 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:15:30.862 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:15:30.862 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:15:30.865 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:15:30.866  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:16:49.567  INFO 11648 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:16:49.570 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:16:49.570 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 16:16:49.571 DEBUG 11648 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 16:16:49.571 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:16:49.571 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:16:49.572 DEBUG 11648 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:16:49.573  INFO 11648 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:16:50.659  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11648 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:16:50.659 DEBUG 11648 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:16:50.659  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:16:51.299  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.661 seconds (JVM running for 921.802)
2020-02-28 16:16:51.686  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[null]', 请求方法='com.scxh.controller.TypeController.removeType()'}
2020-02-28 16:16:51.718 DEBUG 11648 --- [http-nio-8080-exec-1] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:16:51.718 DEBUG 11648 --- [http-nio-8080-exec-1] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: null
2020-02-28 16:16:51.720 DEBUG 11648 --- [http-nio-8080-exec-1] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 0
2020-02-28 16:16:51.721 ERROR 11648 --- [http-nio-8080-exec-1] .i.ControllerExceptionHandlerInterceptor : 错误！ 请求地址：http://localhost:8080/admin/types/input，请求方式：DELETE，Exception:java.lang.RuntimeException: 不存在该分类！，
[com.scxh.service.impl.TypeServiceImpl.removeTypeById(TypeServiceImpl.java:57)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$a30051c5.removeTypeById(<generated>)
 com.scxh.controller.TypeController.removeType(TypeController.java:61)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$1b760c8f.removeType(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:16:51.721  WARN 11648 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 不存在该分类！]
2020-02-28 16:19:13.894  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11648 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:19:13.894 DEBUG 11648 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:19:13.894  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:19:14.534  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.663 seconds (JVM running for 1065.038)
2020-02-28 16:19:20.754  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:19:20.784 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:19:20.784 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:19:20.786 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:19:20.787 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:19:20.787 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:19:20.787 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:19:20.788  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:19:24.518  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[null]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='com.scxh.controller.TypeController.removeType()'}
2020-02-28 16:19:24.518 DEBUG 11648 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:19:24.519 DEBUG 11648 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: null
2020-02-28 16:19:24.519 DEBUG 11648 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 0
2020-02-28 16:19:24.521 ERROR 11648 --- [http-nio-8080-exec-3] .i.ControllerExceptionHandlerInterceptor : 错误！请求地址：http://localhost:8080/admin/types/input，请求方式：DELETE，Exception:java.lang.RuntimeException: 不存在该分类！
[com.scxh.service.impl.TypeServiceImpl.removeTypeById(TypeServiceImpl.java:57)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$a30051c5.removeTypeById(<generated>)
 com.scxh.controller.TypeController.removeType(TypeController.java:61)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$1b760c8f.removeType(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:19:24.521  WARN 11648 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 不存在该分类！]
2020-02-28 16:20:40.976  INFO 11648 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:20:40.978 DEBUG 11648 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:20:40.978 DEBUG 11648 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 16:20:40.979 DEBUG 11648 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 16:20:40.979 DEBUG 11648 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:20:40.979 DEBUG 11648 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:20:40.981 DEBUG 11648 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:20:40.981  INFO 11648 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:20:42.293  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:20:42.293 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:20:42.293 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:20:42.294 DEBUG 11648 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:20:42.294 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:20:42.294 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:20:42.295 DEBUG 11648 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:20:42.295  INFO 11648 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:20:43.322  INFO 11648 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[null]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='com.scxh.controller.TypeController.removeType()'}
2020-02-28 16:20:43.322 DEBUG 11648 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:20:43.322 DEBUG 11648 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: null
2020-02-28 16:20:43.323 DEBUG 11648 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 0
2020-02-28 16:20:43.323 ERROR 11648 --- [http-nio-8080-exec-6] .i.ControllerExceptionHandlerInterceptor : 错误！请求地址：http://localhost:8080/admin/types/input，请求方式：DELETE，Exception:java.lang.RuntimeException: 不存在该分类！
[com.scxh.service.impl.TypeServiceImpl.removeTypeById(TypeServiceImpl.java:57)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$a30051c5.removeTypeById(<generated>)
 com.scxh.controller.TypeController.removeType(TypeController.java:61)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$1b760c8f.removeType(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:20:43.324  WARN 11648 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 不存在该分类！]
2020-02-28 16:20:48.184  INFO 11648 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[null]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='com.scxh.controller.TypeController.removeType()'}
2020-02-28 16:20:48.184 DEBUG 11648 --- [http-nio-8080-exec-7] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:20:48.185 DEBUG 11648 --- [http-nio-8080-exec-7] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: null
2020-02-28 16:20:48.185 DEBUG 11648 --- [http-nio-8080-exec-7] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 0
2020-02-28 16:20:48.186 ERROR 11648 --- [http-nio-8080-exec-7] .i.ControllerExceptionHandlerInterceptor : 错误！请求地址：http://localhost:8080/admin/types/input，请求方式：DELETE，Exception:java.lang.RuntimeException: 不存在该分类！
[com.scxh.service.impl.TypeServiceImpl.removeTypeById(TypeServiceImpl.java:57)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$a30051c5.removeTypeById(<generated>)
 com.scxh.controller.TypeController.removeType(TypeController.java:61)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$1b760c8f.removeType(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:20:48.186  WARN 11648 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 不存在该分类！]
2020-02-28 16:21:33.725  INFO 11648 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:21:33.726 DEBUG 11648 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:21:33.726 DEBUG 11648 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 16:21:33.726 DEBUG 11648 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 16:21:33.727 DEBUG 11648 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:21:33.727 DEBUG 11648 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:21:33.727 DEBUG 11648 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:21:33.728  INFO 11648 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:21:35.433  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11648 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:21:35.433 DEBUG 11648 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:21:35.433  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:21:36.069  INFO 11648 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.662 seconds (JVM running for 1206.572)
2020-02-28 16:21:36.255  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:21:36.283 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:21:36.283 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:21:36.285 DEBUG 11648 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:21:36.286 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:21:36.286 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:21:36.287 DEBUG 11648 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:21:36.287  INFO 11648 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:21:39.754 ERROR 11648 --- [http-nio-8080-exec-4] .i.ControllerExceptionHandlerInterceptor : 错误！请求地址：http://localhost:8080/admin/types/input，请求方式：DELETE，Exception:org.springframework.web.bind.MissingServletRequestParameterException: Required Integer parameter 'id' is not present
[org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
 org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
 org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
 org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:21:39.754  WARN 11648 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required Integer parameter 'id' is not present]
2020-02-28 16:26:00.866  INFO 8976 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8976 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:26:00.867 DEBUG 8976 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:26:00.867  INFO 8976 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:26:03.117  INFO 8976 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 2.847 seconds (JVM running for 3.606)
2020-02-28 16:26:07.611  INFO 8976 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:26:07.786 DEBUG 8976 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:26:07.801 DEBUG 8976 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:26:07.819 DEBUG 8976 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:26:07.821 DEBUG 8976 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:26:07.822 DEBUG 8976 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:26:07.825 DEBUG 8976 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:26:07.826  INFO 8976 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:26:12.876  INFO 8976 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[null]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='com.scxh.controller.TypeController.removeType()'}
2020-02-28 16:26:32.540 DEBUG 8976 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:26:32.541 DEBUG 8976 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: null
2020-02-28 16:26:32.542 DEBUG 8976 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 0
2020-02-28 16:26:32.554 ERROR 8976 --- [http-nio-8080-exec-6] .i.ControllerExceptionHandlerInterceptor : 错误！请求地址：http://localhost:8080/admin/types/input，请求方式：DELETE，Exception:java.lang.RuntimeException: 不存在该分类！
[com.scxh.service.impl.TypeServiceImpl.removeTypeById(TypeServiceImpl.java:57)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$7460df0f.removeTypeById(<generated>)
 com.scxh.controller.TypeController.removeType(TypeController.java:61)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$43043b99.removeType(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:26:32.557  WARN 8976 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 不存在该分类！]
2020-02-28 16:26:49.173  INFO 248 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 248 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:26:49.175 DEBUG 248 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:26:49.176  INFO 248 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:26:51.638  INFO 248 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 3.06 seconds (JVM running for 3.879)
2020-02-28 16:26:51.797  INFO 248 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:26:51.991 DEBUG 248 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:26:52.006 DEBUG 248 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:26:52.037 DEBUG 248 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:26:52.040 DEBUG 248 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:26:52.040 DEBUG 248 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:26:52.043 DEBUG 248 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:26:52.044  INFO 248 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:27:41.560  INFO 248 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[null, org.apache.shiro.web.servlet.ShiroHttpServletRequest@716d61ba]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='com.scxh.controller.TypeController.removeType()'}
2020-02-28 16:28:25.515 DEBUG 248 --- [http-nio-8080-exec-4] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:28:25.516 DEBUG 248 --- [http-nio-8080-exec-4] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: null
2020-02-28 16:28:25.517 DEBUG 248 --- [http-nio-8080-exec-4] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 0
2020-02-28 16:28:25.520 ERROR 248 --- [http-nio-8080-exec-4] .i.ControllerExceptionHandlerInterceptor : 错误！请求地址：http://localhost:8080/admin/types/input，请求方式：DELETE，Exception:java.lang.RuntimeException: 不存在该分类！
[com.scxh.service.impl.TypeServiceImpl.removeTypeById(TypeServiceImpl.java:57)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$f8d4ff2.removeTypeById(<generated>)
 com.scxh.controller.TypeController.removeType(TypeController.java:62)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$acc271f4.removeType(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:28:25.520  WARN 248 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 不存在该分类！]
2020-02-28 16:28:39.983  INFO 11736 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 11736 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:28:39.986 DEBUG 11736 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:28:39.987  INFO 11736 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:28:42.578  INFO 11736 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 3.042 seconds (JVM running for 3.757)
2020-02-28 16:28:43.261  INFO 11736 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:28:43.438 DEBUG 11736 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:28:43.452 DEBUG 11736 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:28:43.468 DEBUG 11736 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:28:43.470 DEBUG 11736 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:28:43.470 DEBUG 11736 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:28:43.473 DEBUG 11736 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:28:43.473  INFO 11736 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:28:44.819  INFO 11736 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[null, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7cef3858]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='com.scxh.controller.TypeController.removeType()'}
2020-02-28 16:28:53.089 DEBUG 11736 --- [http-nio-8080-exec-4] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:28:53.090 DEBUG 11736 --- [http-nio-8080-exec-4] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: null
2020-02-28 16:28:53.091 DEBUG 11736 --- [http-nio-8080-exec-4] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 0
2020-02-28 16:28:53.094 ERROR 11736 --- [http-nio-8080-exec-4] .i.ControllerExceptionHandlerInterceptor : 错误！请求地址：http://localhost:8080/admin/types/input，请求方式：DELETE，Exception:java.lang.RuntimeException: 不存在该分类！
[com.scxh.service.impl.TypeServiceImpl.removeTypeById(TypeServiceImpl.java:57)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$53a22366.removeTypeById(<generated>)
 com.scxh.controller.TypeController.removeType(TypeController.java:63)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$bdb1d49b.removeType(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:28:53.095  WARN 11736 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 不存在该分类！]
2020-02-28 16:33:16.487  INFO 13556 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 13556 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:33:16.491 DEBUG 13556 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:33:16.491  INFO 13556 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:33:19.024  INFO 13556 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 3.04 seconds (JVM running for 3.762)
2020-02-28 16:33:23.531  INFO 13556 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:33:23.716 DEBUG 13556 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:33:23.730 DEBUG 13556 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:33:23.746 DEBUG 13556 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:33:23.748 DEBUG 13556 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:33:23.749 DEBUG 13556 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:33:23.752 DEBUG 13556 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:33:23.753  INFO 13556 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:33:27.606  INFO 13556 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[8, org.apache.shiro.web.servlet.ShiroHttpServletRequest@58cd8093]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='com.scxh.controller.TypeController.removeType()'}
2020-02-28 16:33:34.619 DEBUG 13556 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:33:34.625 DEBUG 13556 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 8(Integer)
2020-02-28 16:33:34.829 DEBUG 13556 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:33:41.916  INFO 13556 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：
2020-02-28 16:33:41.932 ERROR 13556 --- [http-nio-8080-exec-6] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-6] Exception processing template "": Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:33:41.935 ERROR 13556 --- [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:33:47.415  INFO 13556 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:33:47.416 DEBUG 13556 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:33:47.416 DEBUG 13556 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 16:33:47.416 DEBUG 13556 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 16:33:47.417 DEBUG 13556 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:33:47.417 DEBUG 13556 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:33:47.419 DEBUG 13556 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:33:47.419  INFO 13556 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:33:54.682  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:33:54.684 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:33:54.684  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:33:56.984  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 2.755 seconds (JVM running for 3.375)
2020-02-28 16:35:32.554  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:35:32.716 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:35:32.731 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:35:32.746 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:35:32.749 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:35:32.749 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:35:32.752 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 8
2020-02-28 16:35:32.754  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:35:34.023  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:35:34.024 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:35:34.024  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:35:34.688  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.694 seconds (JVM running for 101.08)
2020-02-28 16:35:38.048  INFO 3804 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[9]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='com.scxh.controller.TypeController.removeType()'}
2020-02-28 16:35:38.079 DEBUG 3804 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:35:38.079 DEBUG 3804 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 9(Integer)
2020-02-28 16:35:38.166 DEBUG 3804 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:35:38.167  INFO 3804 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：
2020-02-28 16:35:38.185 ERROR 3804 --- [http-nio-8080-exec-6] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-6] Exception processing template "": Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:35:38.187 ERROR 3804 --- [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:37:17.492  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='com.scxh.controller.TypeController.typesPage()'}
2020-02-28 16:37:17.497 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:37:17.497 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 16:37:17.498 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 16:37:17.498 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:37:17.498 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:37:17.499 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 7
2020-02-28 16:37:17.499  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:37:18.971  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:37:18.971 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:37:18.971  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:37:19.656  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.711 seconds (JVM running for 206.048)
2020-02-28 16:39:23.427  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:39:23.458 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:39:23.458 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:39:23.459 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:39:23.460 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:39:23.460 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:39:23.461 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 7
2020-02-28 16:39:23.462  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:39:24.990  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:39:24.991 DEBUG 3804 --- [http-nio-8080-exec-4] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:39:24.991 DEBUG 3804 --- [http-nio-8080-exec-4] countTypes     : ==> Parameters:
2020-02-28 16:39:24.992 DEBUG 3804 --- [http-nio-8080-exec-4] countTypes     : <==      Total: 1
2020-02-28 16:39:24.992 DEBUG 3804 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:39:24.992 DEBUG 3804 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:39:24.993 DEBUG 3804 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 7
2020-02-28 16:39:24.993  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:39:53.045  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:39:53.045 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:39:53.045 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 16:39:53.046 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 16:39:53.047 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:39:53.047 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:39:53.048 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 7
2020-02-28 16:39:53.049  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:39:54.845  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[7]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:39:54.845 DEBUG 3804 --- [http-nio-8080-exec-9] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:39:54.845 DEBUG 3804 --- [http-nio-8080-exec-9] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 7(Integer)
2020-02-28 16:39:54.913 DEBUG 3804 --- [http-nio-8080-exec-9] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:39:54.913  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：
2020-02-28 16:39:54.917 ERROR 3804 --- [http-nio-8080-exec-9] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-9] Exception processing template "": Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:39:54.918 ERROR 3804 --- [http-nio-8080-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:41:10.626  INFO 3804 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:41:10.630 DEBUG 3804 --- [http-nio-8080-exec-10] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:41:10.630 DEBUG 3804 --- [http-nio-8080-exec-10] countTypes     : ==> Parameters:
2020-02-28 16:41:10.631 DEBUG 3804 --- [http-nio-8080-exec-10] countTypes     : <==      Total: 1
2020-02-28 16:41:10.631 DEBUG 3804 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:41:10.632 DEBUG 3804 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:41:10.632 DEBUG 3804 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 6
2020-02-28 16:41:10.633  INFO 3804 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:41:11.974  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[6]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:41:11.975 DEBUG 3804 --- [http-nio-8080-exec-1] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:41:11.975 DEBUG 3804 --- [http-nio-8080-exec-1] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 6(Integer)
2020-02-28 16:41:12.055 DEBUG 3804 --- [http-nio-8080-exec-1] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:41:12.056  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：
2020-02-28 16:41:12.056 ERROR 3804 --- [http-nio-8080-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-1] Exception processing template "": Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:41:12.057 ERROR 3804 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:41:17.243  INFO 3804 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[5]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:41:17.243 DEBUG 3804 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:41:17.244 DEBUG 3804 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 5(Integer)
2020-02-28 16:41:17.294 DEBUG 3804 --- [http-nio-8080-exec-6] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:41:17.294  INFO 3804 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：
2020-02-28 16:41:17.295 ERROR 3804 --- [http-nio-8080-exec-6] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-6] Exception processing template "": Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:41:17.296 ERROR 3804 --- [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:41:18.773  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:41:18.773 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:41:18.773 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 16:41:18.774 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 16:41:18.774 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:41:18.775 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:41:18.775 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 4
2020-02-28 16:41:18.776  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:41:34.887  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:41:34.887 DEBUG 3804 --- [http-nio-8080-exec-8] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:41:34.888 DEBUG 3804 --- [http-nio-8080-exec-8] countTypes     : ==> Parameters:
2020-02-28 16:41:34.889 DEBUG 3804 --- [http-nio-8080-exec-8] countTypes     : <==      Total: 1
2020-02-28 16:41:34.889 DEBUG 3804 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:41:34.889 DEBUG 3804 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:41:34.890 DEBUG 3804 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 4
2020-02-28 16:41:34.891  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:41:36.378  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[4]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:41:36.379 DEBUG 3804 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:41:36.379 DEBUG 3804 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 4(Integer)
2020-02-28 16:41:36.406 DEBUG 3804 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:41:36.406  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：
2020-02-28 16:41:36.407 ERROR 3804 --- [http-nio-8080-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-3] Exception processing template "": Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:41:36.407 ERROR 3804 --- [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:41:51.510  INFO 3804 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:41:51.510 DEBUG 3804 --- [http-nio-8080-exec-10] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:41:51.510 DEBUG 3804 --- [http-nio-8080-exec-10] countTypes     : ==> Parameters:
2020-02-28 16:41:51.511 DEBUG 3804 --- [http-nio-8080-exec-10] countTypes     : <==      Total: 1
2020-02-28 16:41:51.512 DEBUG 3804 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:41:51.512 DEBUG 3804 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:41:51.513 DEBUG 3804 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 3
2020-02-28 16:41:51.513  INFO 3804 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:41:52.675  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[3]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:41:52.676 DEBUG 3804 --- [http-nio-8080-exec-4] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:41:52.676 DEBUG 3804 --- [http-nio-8080-exec-4] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 3(Integer)
2020-02-28 16:41:52.740 DEBUG 3804 --- [http-nio-8080-exec-4] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:41:52.740  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：
2020-02-28 16:41:52.741 ERROR 3804 --- [http-nio-8080-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-4] Exception processing template "": Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:41:52.741 ERROR 3804 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:46:53.736  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:46:53.739 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:46:53.739 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:46:53.740 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:46:53.740 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:46:53.740 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:46:53.740 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 16:46:53.741  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:47:14.163  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[2]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:47:14.163 DEBUG 3804 --- [http-nio-8080-exec-8] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:47:14.163 DEBUG 3804 --- [http-nio-8080-exec-8] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 2(Integer)
2020-02-28 16:47:14.267 DEBUG 3804 --- [http-nio-8080-exec-8] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:47:14.267  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：
2020-02-28 16:47:14.268 ERROR 3804 --- [http-nio-8080-exec-8] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-8] Exception processing template "": Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:47:14.268 ERROR 3804 --- [http-nio-8080-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:47:14.277  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:47:14.277 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:47:14.278 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 16:47:14.278 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 16:47:14.279 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:47:14.279 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:47:14.280 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:47:14.280  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:47:15.689  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[3]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:47:15.689 DEBUG 3804 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:47:15.689 DEBUG 3804 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 3(Integer)
2020-02-28 16:47:15.690 DEBUG 3804 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 0
2020-02-28 16:47:15.692 ERROR 3804 --- [http-nio-8080-exec-3] .i.ControllerExceptionHandlerInterceptor : 错误！请求地址：http://localhost:8080/admin/types/input，请求方式：DELETE，Exception:java.lang.RuntimeException: 不存在该分类！
[com.scxh.service.impl.TypeServiceImpl.removeTypeById(TypeServiceImpl.java:57)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$e98b91b5.removeTypeById(<generated>)
 com.scxh.controller.TypeController.removeType(TypeController.java:58)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$52741eb.removeType(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 16:47:15.693  WARN 3804 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: 不存在该分类！]
2020-02-28 16:47:34.214  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/1', 请求参数='[{}, 1]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:47:34.215 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:47:34.215 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 16:47:34.216 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 16:47:34.216 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:47:34.216 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:47:34.216 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:47:34.217  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:47:52.050  INFO 3804 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()', 请求类型='GET'}
2020-02-28 16:47:52.051  INFO 3804 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 16:47:53.713  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[Type(id=null, name=167NotFound, blogs=null), {type=Type(id=null, name=167NotFound, blogs=null), org.springframework.validation.BindingResult.type=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]', 请求方法='com.scxh.controller.TypeController.saveType()', 请求类型='POST'}
2020-02-28 16:47:53.724 DEBUG 3804 --- [http-nio-8080-exec-2] c.s.mapper.TypeMapper.getTypeByExample   : ==>  Preparing: select * from t_type WHERE `name`=? 
2020-02-28 16:47:53.724 DEBUG 3804 --- [http-nio-8080-exec-2] c.s.mapper.TypeMapper.getTypeByExample   : ==> Parameters: 167NotFound(String)
2020-02-28 16:47:53.725 DEBUG 3804 --- [http-nio-8080-exec-2] c.s.mapper.TypeMapper.getTypeByExample   : <==      Total: 0
2020-02-28 16:47:53.725 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.saveType      : ==>  Preparing: insert into t_type(name) VALUES (?); 
2020-02-28 16:47:53.726 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.saveType      : ==> Parameters: 167NotFound(String)
2020-02-28 16:47:53.726 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.saveType      : <==    Updates: 1
2020-02-28 16:47:53.894  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：redirect:/admin/types
2020-02-28 16:47:53.937  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 16:47:53.939  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 16:48:00.835  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@e2718a9]', 请求方法='com.scxh.controller.LoginController.doLogin()', 请求类型='POST'}
2020-02-28 16:48:00.836  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 16:48:00
2020-02-28 16:48:00.838 DEBUG 3804 --- [http-nio-8080-exec-1] c.s.mapper.UserMapper.getUserByExample   : ==>  Preparing: select * from t_user WHERE username= ? 
2020-02-28 16:48:00.838 DEBUG 3804 --- [http-nio-8080-exec-1] c.s.mapper.UserMapper.getUserByExample   : ==> Parameters: NigSailStar(String)
2020-02-28 16:48:00.840 DEBUG 3804 --- [http-nio-8080-exec-1] c.s.mapper.UserMapper.getUserByExample   : <==      Total: 1
2020-02-28 16:48:00.845  WARN 3804 --- [http-nio-8080-exec-1] o.a.shiro.mgt.DefaultSecurityManager     : Delegate RememberMeManager instance of type [org.apache.shiro.web.mgt.CookieRememberMeManager] threw an exception during onSuccessfulLogin.  RememberMe services will not be performed for account [User(id=1, nickname=夜航星, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=2917656453@qq.com, role=admin, avatar=, blogs=null, createTime=Tue Feb 25 18:30:08 CST 2020, modifiedTime=Tue Feb 25 18:30:13 CST 2020)].

org.apache.shiro.io.SerializationException: Unable to serialize object [User(id=1, nickname=夜航星, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=2917656453@qq.com, role=admin, avatar=, blogs=null, createTime=Tue Feb 25 18:30:08 CST 2020, modifiedTime=Tue Feb 25 18:30:13 CST 2020)].  In order for the DefaultSerializer to serialize this object, the [org.apache.shiro.subject.SimplePrincipalCollection] class must implement java.io.Serializable.
	at org.apache.shiro.io.DefaultSerializer.serialize(DefaultSerializer.java:55)
	at org.apache.shiro.mgt.AbstractRememberMeManager.serialize(AbstractRememberMeManager.java:496)
	at org.apache.shiro.mgt.AbstractRememberMeManager.convertPrincipalsToBytes(AbstractRememberMeManager.java:350)
	at org.apache.shiro.mgt.AbstractRememberMeManager.rememberIdentity(AbstractRememberMeManager.java:336)
	at org.apache.shiro.mgt.AbstractRememberMeManager.rememberIdentity(AbstractRememberMeManager.java:311)
	at org.apache.shiro.mgt.AbstractRememberMeManager.onSuccessfulLogin(AbstractRememberMeManager.java:287)
	at org.apache.shiro.mgt.DefaultSecurityManager.rememberMeSuccessfulLogin(DefaultSecurityManager.java:211)
	at org.apache.shiro.mgt.DefaultSecurityManager.onSuccessfulLogin(DefaultSecurityManager.java:296)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:290)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:260)
	at com.scxh.controller.LoginController.doLogin(LoginController.java:73)
	at com.scxh.controller.LoginController$$FastClassBySpringCGLIB$$96ef2a74.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.scxh.controller.LoginController$$EnhancerBySpringCGLIB$$9760e851.doLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.NotSerializableException: com.scxh.po.User
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.HashSet.writeObject(HashSet.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.LinkedHashMap.internalWriteEntries(LinkedHashMap.java:333)
	at java.util.HashMap.writeObject(HashMap.java:1363)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)
	at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:441)
	at org.apache.shiro.subject.SimplePrincipalCollection.writeObject(SimplePrincipalCollection.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.shiro.io.DefaultSerializer.serialize(DefaultSerializer.java:48)
	... 88 common frames omitted

2020-02-28 16:48:00.870  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：{"url":"/admin/index"}
2020-02-28 16:48:00.884  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 16:48:00.884  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 16:48:02.434  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:48:02.435 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:48:02.435 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 16:48:02.435 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 16:48:02.436 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:48:02.436 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:48:02.437 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 16:48:02.437  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:48:04.881  INFO 3804 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[10]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:48:04.881 DEBUG 3804 --- [http-nio-8080-exec-10] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:48:04.882 DEBUG 3804 --- [http-nio-8080-exec-10] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 10(Integer)
2020-02-28 16:48:05.035 DEBUG 3804 --- [http-nio-8080-exec-10] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:48:05.036  INFO 3804 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：
2020-02-28 16:48:05.037 ERROR 3804 --- [http-nio-8080-exec-10] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-10] Exception processing template "": Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:48:05.037 ERROR 3804 --- [http-nio-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:48:05.044  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:48:05.044 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:48:05.044 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:48:05.045 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:48:05.046 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:48:05.046 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:48:05.047 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:48:05.047  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:50:37.185  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:50:37.189 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:50:37.189 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 16:50:37.190 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 16:50:37.190 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:50:37.191 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:50:37.191 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:50:37.191  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:50:38.078  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()', 请求类型='GET'}
2020-02-28 16:50:38.079  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 16:50:40.505  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[Type(id=null, name=167NotFound, blogs=null), {type=Type(id=null, name=167NotFound, blogs=null), org.springframework.validation.BindingResult.type=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]', 请求方法='com.scxh.controller.TypeController.saveType()', 请求类型='POST'}
2020-02-28 16:50:40.506 DEBUG 3804 --- [http-nio-8080-exec-1] c.s.mapper.TypeMapper.getTypeByExample   : ==>  Preparing: select * from t_type WHERE `name`=? 
2020-02-28 16:50:40.506 DEBUG 3804 --- [http-nio-8080-exec-1] c.s.mapper.TypeMapper.getTypeByExample   : ==> Parameters: 167NotFound(String)
2020-02-28 16:50:40.507 DEBUG 3804 --- [http-nio-8080-exec-1] c.s.mapper.TypeMapper.getTypeByExample   : <==      Total: 0
2020-02-28 16:50:40.507 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.saveType      : ==>  Preparing: insert into t_type(name) VALUES (?); 
2020-02-28 16:50:40.508 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.saveType      : ==> Parameters: 167NotFound(String)
2020-02-28 16:50:40.508 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.saveType      : <==    Updates: 1
2020-02-28 16:50:40.585  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：redirect:/admin/types
2020-02-28 16:50:40.603  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:50:40.603 DEBUG 3804 --- [http-nio-8080-exec-8] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:50:40.603 DEBUG 3804 --- [http-nio-8080-exec-8] countTypes     : ==> Parameters:
2020-02-28 16:50:40.604 DEBUG 3804 --- [http-nio-8080-exec-8] countTypes     : <==      Total: 1
2020-02-28 16:50:40.604 DEBUG 3804 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:50:40.604 DEBUG 3804 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:50:40.605 DEBUG 3804 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 16:50:40.605  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:50:45.719  INFO 3804 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[11]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:50:45.719 DEBUG 3804 --- [http-nio-8080-exec-10] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:50:45.720 DEBUG 3804 --- [http-nio-8080-exec-10] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 11(Integer)
2020-02-28 16:50:45.838 DEBUG 3804 --- [http-nio-8080-exec-10] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:50:45.839  INFO 3804 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：
2020-02-28 16:50:45.839 ERROR 3804 --- [http-nio-8080-exec-10] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-10] Exception processing template "": Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:50:45.840 ERROR 3804 --- [http-nio-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:50:45.848  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:50:45.848 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:50:45.849 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 16:50:45.849 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 16:50:45.850 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:50:45.850 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:50:45.851 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:50:45.851  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:51:05.090  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:51:05.091 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:51:05.091 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:51:05.094 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:51:05.094 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:51:05.094 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:51:05.095 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:51:05.096  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:52:25.981  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:52:25.984 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:52:25.984 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 16:52:25.985 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 16:52:25.986 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:52:25.986 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:52:25.986 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:52:25.987  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:52:26.946  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()', 请求类型='GET'}
2020-02-28 16:52:26.946  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 16:52:27.614  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:52:27.614 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:52:27.614  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:52:28.014  WARN 3804 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Cannot deserialize session attribute [org.apache.shiro.subject.support.DefaultSubjectContext_PRINCIPALS_SESSION_KEY] for session [579A603703587DC49FCF43FA93C49853]
2020-02-28 16:52:28.379  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.79 seconds (JVM running for 1114.771)
2020-02-28 16:52:32.180  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[Type(id=null, name=167NotFound, blogs=null), {type=Type(id=null, name=167NotFound, blogs=null), org.springframework.validation.BindingResult.type=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]', 请求方法='com.scxh.controller.TypeController.saveType()', 请求类型='POST'}
2020-02-28 16:52:32.209 DEBUG 3804 --- [http-nio-8080-exec-1] c.s.mapper.TypeMapper.getTypeByExample   : ==>  Preparing: select * from t_type WHERE `name`=? 
2020-02-28 16:52:32.209 DEBUG 3804 --- [http-nio-8080-exec-1] c.s.mapper.TypeMapper.getTypeByExample   : ==> Parameters: 167NotFound(String)
2020-02-28 16:52:32.211 DEBUG 3804 --- [http-nio-8080-exec-1] c.s.mapper.TypeMapper.getTypeByExample   : <==      Total: 0
2020-02-28 16:52:32.212 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.saveType      : ==>  Preparing: insert into t_type(name) VALUES (?); 
2020-02-28 16:52:32.212 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.saveType      : ==> Parameters: 167NotFound(String)
2020-02-28 16:52:32.213 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.saveType      : <==    Updates: 1
2020-02-28 16:52:32.307  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：redirect:/admin/types
2020-02-28 16:52:32.354  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 16:52:32.356  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 16:52:37.887  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@185cbb75]', 请求方法='com.scxh.controller.LoginController.doLogin()', 请求类型='POST'}
2020-02-28 16:52:37.888  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 16:52:37
2020-02-28 16:52:37.889 DEBUG 3804 --- [http-nio-8080-exec-3] c.s.mapper.UserMapper.getUserByExample   : ==>  Preparing: select * from t_user WHERE username= ? 
2020-02-28 16:52:37.889 DEBUG 3804 --- [http-nio-8080-exec-3] c.s.mapper.UserMapper.getUserByExample   : ==> Parameters: NigSailStar(String)
2020-02-28 16:52:37.890 DEBUG 3804 --- [http-nio-8080-exec-3] c.s.mapper.UserMapper.getUserByExample   : <==      Total: 1
2020-02-28 16:52:37.891  WARN 3804 --- [http-nio-8080-exec-3] o.a.shiro.mgt.DefaultSecurityManager     : Delegate RememberMeManager instance of type [org.apache.shiro.web.mgt.CookieRememberMeManager] threw an exception during onSuccessfulLogin.  RememberMe services will not be performed for account [User(id=1, nickname=夜航星, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=2917656453@qq.com, role=admin, avatar=, blogs=null, createTime=Tue Feb 25 18:30:08 CST 2020, modifiedTime=Tue Feb 25 18:30:13 CST 2020)].

org.apache.shiro.io.SerializationException: Unable to serialize object [User(id=1, nickname=夜航星, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=2917656453@qq.com, role=admin, avatar=, blogs=null, createTime=Tue Feb 25 18:30:08 CST 2020, modifiedTime=Tue Feb 25 18:30:13 CST 2020)].  In order for the DefaultSerializer to serialize this object, the [org.apache.shiro.subject.SimplePrincipalCollection] class must implement java.io.Serializable.
	at org.apache.shiro.io.DefaultSerializer.serialize(DefaultSerializer.java:55)
	at org.apache.shiro.mgt.AbstractRememberMeManager.serialize(AbstractRememberMeManager.java:496)
	at org.apache.shiro.mgt.AbstractRememberMeManager.convertPrincipalsToBytes(AbstractRememberMeManager.java:350)
	at org.apache.shiro.mgt.AbstractRememberMeManager.rememberIdentity(AbstractRememberMeManager.java:336)
	at org.apache.shiro.mgt.AbstractRememberMeManager.rememberIdentity(AbstractRememberMeManager.java:311)
	at org.apache.shiro.mgt.AbstractRememberMeManager.onSuccessfulLogin(AbstractRememberMeManager.java:287)
	at org.apache.shiro.mgt.DefaultSecurityManager.rememberMeSuccessfulLogin(DefaultSecurityManager.java:211)
	at org.apache.shiro.mgt.DefaultSecurityManager.onSuccessfulLogin(DefaultSecurityManager.java:296)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:290)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:260)
	at com.scxh.controller.LoginController.doLogin(LoginController.java:73)
	at com.scxh.controller.LoginController$$FastClassBySpringCGLIB$$96ef2a74.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.scxh.controller.LoginController$$EnhancerBySpringCGLIB$$9760e851.doLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.NotSerializableException: com.scxh.po.User
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.HashSet.writeObject(HashSet.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.LinkedHashMap.internalWriteEntries(LinkedHashMap.java:333)
	at java.util.HashMap.writeObject(HashMap.java:1363)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)
	at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:441)
	at org.apache.shiro.subject.SimplePrincipalCollection.writeObject(SimplePrincipalCollection.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.shiro.io.DefaultSerializer.serialize(DefaultSerializer.java:48)
	... 88 common frames omitted

2020-02-28 16:52:37.892  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：{"url":"/admin/index"}
2020-02-28 16:52:37.903  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 16:52:37.903  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 16:52:39.894  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:52:39.895 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:52:39.895 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 16:52:39.896 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 16:52:39.897 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:52:39.897 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:52:39.898 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 16:52:39.898  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:52:41.681  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[12]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:52:41.681 DEBUG 3804 --- [http-nio-8080-exec-9] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:52:41.682 DEBUG 3804 --- [http-nio-8080-exec-9] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 12(Integer)
2020-02-28 16:52:41.729 DEBUG 3804 --- [http-nio-8080-exec-9] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:52:41.729  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：null
2020-02-28 16:52:41.730 ERROR 3804 --- [http-nio-8080-exec-9] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-9] Exception processing template "admin/types/input": Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:52:41.730 ERROR 3804 --- [http-nio-8080-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:52:41.740  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:52:41.740 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:52:41.740 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:52:41.741 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:52:41.741 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:52:41.741 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:52:41.742 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:52:41.742  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:53:43.254  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:53:43.256 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:53:43.256 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 16:53:43.257 DEBUG 3804 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 16:53:43.257 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:53:43.257 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:53:43.258 DEBUG 3804 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:53:43.258  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:53:44.025  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()', 请求类型='GET'}
2020-02-28 16:53:44.025  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 16:53:45.673  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[Type(id=null, name=167NotFound, blogs=null), {type=Type(id=null, name=167NotFound, blogs=null), org.springframework.validation.BindingResult.type=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]', 请求方法='com.scxh.controller.TypeController.saveType()', 请求类型='POST'}
2020-02-28 16:53:45.673 DEBUG 3804 --- [http-nio-8080-exec-5] c.s.mapper.TypeMapper.getTypeByExample   : ==>  Preparing: select * from t_type WHERE `name`=? 
2020-02-28 16:53:45.674 DEBUG 3804 --- [http-nio-8080-exec-5] c.s.mapper.TypeMapper.getTypeByExample   : ==> Parameters: 167NotFound(String)
2020-02-28 16:53:45.674 DEBUG 3804 --- [http-nio-8080-exec-5] c.s.mapper.TypeMapper.getTypeByExample   : <==      Total: 0
2020-02-28 16:53:45.675 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.saveType      : ==>  Preparing: insert into t_type(name) VALUES (?); 
2020-02-28 16:53:45.676 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.saveType      : ==> Parameters: 167NotFound(String)
2020-02-28 16:53:45.676 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.saveType      : <==    Updates: 1
2020-02-28 16:53:45.771  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：redirect:/admin/types
2020-02-28 16:53:45.792  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:53:45.793 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:53:45.793 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 16:53:45.794 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 16:53:45.794 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:53:45.794 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:53:45.795 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 16:53:45.795  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:53:46.665  INFO 3804 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[13]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:53:46.666 DEBUG 3804 --- [http-nio-8080-exec-7] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:53:46.666 DEBUG 3804 --- [http-nio-8080-exec-7] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 13(Integer)
2020-02-28 16:53:46.733 DEBUG 3804 --- [http-nio-8080-exec-7] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:53:46.734  INFO 3804 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：null
2020-02-28 16:53:46.734 ERROR 3804 --- [http-nio-8080-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-7] Exception processing template "admin/types/input": Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:53:46.735 ERROR 3804 --- [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 16:53:46.745  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:53:46.746 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:53:46.746 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:53:46.746 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:53:46.747 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:53:46.747 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:53:46.747 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:53:46.747  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:53:47.645  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 16:53:47.646 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 16:53:47.646  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 16:53:47.978  WARN 3804 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Cannot deserialize session attribute [org.apache.shiro.subject.support.DefaultSubjectContext_PRINCIPALS_SESSION_KEY] for session [579A603703587DC49FCF43FA93C49853]
2020-02-28 16:53:48.268  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.654 seconds (JVM running for 1194.66)
2020-02-28 16:54:00.368  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 16:54:00.368  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 16:54:08.468  INFO 3804 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 16:54:08.468  INFO 3804 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 16:54:09.403  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 16:54:09.403  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 16:54:10.450  INFO 3804 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 16:54:10.450  INFO 3804 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 16:54:14.543  INFO 3804 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@70635dc0]', 请求方法='com.scxh.controller.LoginController.doLogin()', 请求类型='POST'}
2020-02-28 16:54:14.543  INFO 3804 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 16:54:14
2020-02-28 16:54:14.568 DEBUG 3804 --- [http-nio-8080-exec-6] c.s.mapper.UserMapper.getUserByExample   : ==>  Preparing: select * from t_user WHERE username= ? 
2020-02-28 16:54:14.569 DEBUG 3804 --- [http-nio-8080-exec-6] c.s.mapper.UserMapper.getUserByExample   : ==> Parameters: NigSailStar(String)
2020-02-28 16:54:14.569 DEBUG 3804 --- [http-nio-8080-exec-6] c.s.mapper.UserMapper.getUserByExample   : <==      Total: 1
2020-02-28 16:54:14.571  WARN 3804 --- [http-nio-8080-exec-6] o.a.shiro.mgt.DefaultSecurityManager     : Delegate RememberMeManager instance of type [org.apache.shiro.web.mgt.CookieRememberMeManager] threw an exception during onSuccessfulLogin.  RememberMe services will not be performed for account [User(id=1, nickname=夜航星, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=2917656453@qq.com, role=admin, avatar=, blogs=null, createTime=Tue Feb 25 18:30:08 CST 2020, modifiedTime=Tue Feb 25 18:30:13 CST 2020)].

org.apache.shiro.io.SerializationException: Unable to serialize object [User(id=1, nickname=夜航星, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=2917656453@qq.com, role=admin, avatar=, blogs=null, createTime=Tue Feb 25 18:30:08 CST 2020, modifiedTime=Tue Feb 25 18:30:13 CST 2020)].  In order for the DefaultSerializer to serialize this object, the [org.apache.shiro.subject.SimplePrincipalCollection] class must implement java.io.Serializable.
	at org.apache.shiro.io.DefaultSerializer.serialize(DefaultSerializer.java:55)
	at org.apache.shiro.mgt.AbstractRememberMeManager.serialize(AbstractRememberMeManager.java:496)
	at org.apache.shiro.mgt.AbstractRememberMeManager.convertPrincipalsToBytes(AbstractRememberMeManager.java:350)
	at org.apache.shiro.mgt.AbstractRememberMeManager.rememberIdentity(AbstractRememberMeManager.java:336)
	at org.apache.shiro.mgt.AbstractRememberMeManager.rememberIdentity(AbstractRememberMeManager.java:311)
	at org.apache.shiro.mgt.AbstractRememberMeManager.onSuccessfulLogin(AbstractRememberMeManager.java:287)
	at org.apache.shiro.mgt.DefaultSecurityManager.rememberMeSuccessfulLogin(DefaultSecurityManager.java:211)
	at org.apache.shiro.mgt.DefaultSecurityManager.onSuccessfulLogin(DefaultSecurityManager.java:296)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:290)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:260)
	at com.scxh.controller.LoginController.doLogin(LoginController.java:73)
	at com.scxh.controller.LoginController$$FastClassBySpringCGLIB$$96ef2a74.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.scxh.controller.LoginController$$EnhancerBySpringCGLIB$$9760e851.doLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.NotSerializableException: com.scxh.po.User
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.HashSet.writeObject(HashSet.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.LinkedHashMap.internalWriteEntries(LinkedHashMap.java:333)
	at java.util.HashMap.writeObject(HashMap.java:1363)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)
	at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:441)
	at org.apache.shiro.subject.SimplePrincipalCollection.writeObject(SimplePrincipalCollection.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.shiro.io.DefaultSerializer.serialize(DefaultSerializer.java:48)
	... 88 common frames omitted

2020-02-28 16:54:14.571  INFO 3804 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：{"url":"/admin/index"}
2020-02-28 16:54:14.581  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 16:54:14.581  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 16:54:15.943  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:54:15.947 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:54:15.947 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:54:15.948 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:54:15.949 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:54:15.949 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:54:15.950 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:54:15.950  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:54:17.273  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()', 请求类型='GET'}
2020-02-28 16:54:17.273  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 16:54:21.752  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[Type(id=null, name=167NotFound, blogs=null), {type=Type(id=null, name=167NotFound, blogs=null), org.springframework.validation.BindingResult.type=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]', 请求方法='com.scxh.controller.TypeController.saveType()', 请求类型='POST'}
2020-02-28 16:54:21.753 DEBUG 3804 --- [http-nio-8080-exec-4] c.s.mapper.TypeMapper.getTypeByExample   : ==>  Preparing: select * from t_type WHERE `name`=? 
2020-02-28 16:54:21.753 DEBUG 3804 --- [http-nio-8080-exec-4] c.s.mapper.TypeMapper.getTypeByExample   : ==> Parameters: 167NotFound(String)
2020-02-28 16:54:21.753 DEBUG 3804 --- [http-nio-8080-exec-4] c.s.mapper.TypeMapper.getTypeByExample   : <==      Total: 0
2020-02-28 16:54:21.754 DEBUG 3804 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.saveType      : ==>  Preparing: insert into t_type(name) VALUES (?); 
2020-02-28 16:54:21.755 DEBUG 3804 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.saveType      : ==> Parameters: 167NotFound(String)
2020-02-28 16:54:21.755 DEBUG 3804 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.saveType      : <==    Updates: 1
2020-02-28 16:54:21.858  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：redirect:/admin/types
2020-02-28 16:54:21.881  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:54:21.882 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:54:21.882 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:54:21.882 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:54:21.882 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:54:21.882 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:54:21.883 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 16:54:21.883  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:54:26.971  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[14]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 16:54:26.972 DEBUG 3804 --- [http-nio-8080-exec-5] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 16:54:26.972 DEBUG 3804 --- [http-nio-8080-exec-5] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 14(Integer)
2020-02-28 16:54:27.043 DEBUG 3804 --- [http-nio-8080-exec-5] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 16:54:27.043  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：null
2020-02-28 16:54:33.224  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:54:33.224 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:54:33.224 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:54:33.225 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:54:33.225 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:54:33.225 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:54:33.226 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:54:33.226  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:56:10.076  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:56:10.079 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:56:10.079 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:56:10.080 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:56:10.081 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:56:10.081 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:56:10.081 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:56:10.082  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:57:32.294  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:57:32.298 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:57:32.298 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:57:32.299 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:57:32.299 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:57:32.299 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:57:32.300 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:57:32.300  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:57:33.482  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()', 请求类型='GET'}
2020-02-28 16:57:33.482  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 16:57:40.514  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[Type(id=null, name=测试分类, blogs=null), {type=Type(id=null, name=测试分类, blogs=null), org.springframework.validation.BindingResult.type=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]', 请求方法='com.scxh.controller.TypeController.saveType()', 请求类型='POST'}
2020-02-28 16:57:40.515 DEBUG 3804 --- [http-nio-8080-exec-2] c.s.mapper.TypeMapper.getTypeByExample   : ==>  Preparing: select * from t_type WHERE `name`=? 
2020-02-28 16:57:40.515 DEBUG 3804 --- [http-nio-8080-exec-2] c.s.mapper.TypeMapper.getTypeByExample   : ==> Parameters: 测试分类(String)
2020-02-28 16:57:40.516 DEBUG 3804 --- [http-nio-8080-exec-2] c.s.mapper.TypeMapper.getTypeByExample   : <==      Total: 1
2020-02-28 16:57:40.517  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 16:57:44.391  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:57:44.391 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:57:44.391 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : ==> Parameters:
2020-02-28 16:57:44.392 DEBUG 3804 --- [http-nio-8080-exec-5] countTypes     : <==      Total: 1
2020-02-28 16:57:44.392 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:57:44.393 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:57:44.394 DEBUG 3804 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:57:44.394  INFO 3804 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:57:45.599  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()', 请求类型='GET'}
2020-02-28 16:57:45.599  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 16:58:22.564  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()', 请求类型='GET'}
2020-02-28 16:58:22.564  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 16:58:23.514  INFO 3804 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:58:23.514 DEBUG 3804 --- [http-nio-8080-exec-7] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:58:23.514 DEBUG 3804 --- [http-nio-8080-exec-7] countTypes     : ==> Parameters:
2020-02-28 16:58:23.515 DEBUG 3804 --- [http-nio-8080-exec-7] countTypes     : <==      Total: 1
2020-02-28 16:58:23.515 DEBUG 3804 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:58:23.515 DEBUG 3804 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:58:23.516 DEBUG 3804 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:58:23.516  INFO 3804 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:58:25.243  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:58:25.244 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:58:25.244 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : ==> Parameters:
2020-02-28 16:58:25.245 DEBUG 3804 --- [http-nio-8080-exec-2] countTypes     : <==      Total: 1
2020-02-28 16:58:25.245 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:58:25.245 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:58:25.246 DEBUG 3804 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:58:25.246  INFO 3804 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:58:27.463  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:58:27.464 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:58:27.464 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : ==> Parameters:
2020-02-28 16:58:27.464 DEBUG 3804 --- [http-nio-8080-exec-3] countTypes     : <==      Total: 1
2020-02-28 16:58:27.465 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:58:27.465 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:58:27.466 DEBUG 3804 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 16:58:27.466  INFO 3804 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 16:58:39.956  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()', 请求类型='GET'}
2020-02-28 16:58:39.957  INFO 3804 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 16:58:42.407  INFO 3804 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[Type(id=null, name=167NotFound, blogs=null), {type=Type(id=null, name=167NotFound, blogs=null), org.springframework.validation.BindingResult.type=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]', 请求方法='com.scxh.controller.TypeController.saveType()', 请求类型='POST'}
2020-02-28 16:58:42.407 DEBUG 3804 --- [http-nio-8080-exec-7] c.s.mapper.TypeMapper.getTypeByExample   : ==>  Preparing: select * from t_type WHERE `name`=? 
2020-02-28 16:58:42.407 DEBUG 3804 --- [http-nio-8080-exec-7] c.s.mapper.TypeMapper.getTypeByExample   : ==> Parameters: 167NotFound(String)
2020-02-28 16:58:42.408 DEBUG 3804 --- [http-nio-8080-exec-7] c.s.mapper.TypeMapper.getTypeByExample   : <==      Total: 0
2020-02-28 16:58:42.408 DEBUG 3804 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.saveType      : ==>  Preparing: insert into t_type(name) VALUES (?); 
2020-02-28 16:58:42.409 DEBUG 3804 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.saveType      : ==> Parameters: 167NotFound(String)
2020-02-28 16:58:42.409 DEBUG 3804 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.saveType      : <==    Updates: 1
2020-02-28 16:58:42.478  INFO 3804 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：redirect:/admin/types
2020-02-28 16:58:42.502  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 16:58:42.502 DEBUG 3804 --- [http-nio-8080-exec-4] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 16:58:42.502 DEBUG 3804 --- [http-nio-8080-exec-4] countTypes     : ==> Parameters:
2020-02-28 16:58:42.503 DEBUG 3804 --- [http-nio-8080-exec-4] countTypes     : <==      Total: 1
2020-02-28 16:58:42.503 DEBUG 3804 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 16:58:42.503 DEBUG 3804 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 16:58:42.504 DEBUG 3804 --- [http-nio-8080-exec-4] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 16:58:42.504  INFO 3804 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 17:22:24.093  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 17:22:24.093 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 17:22:24.093  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 17:22:24.441  WARN 3804 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Cannot deserialize session attribute [org.apache.shiro.subject.support.DefaultSubjectContext_PRINCIPALS_SESSION_KEY] for session [579A603703587DC49FCF43FA93C49853]
2020-02-28 17:22:24.870  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.803 seconds (JVM running for 2911.262)
2020-02-28 17:36:26.882  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 17:36:26.882 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 17:36:26.882  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 17:36:27.494  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.637 seconds (JVM running for 3753.885)
2020-02-28 17:40:13.309  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 17:40:13.309 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 17:40:13.310  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 17:40:13.926  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.638 seconds (JVM running for 3980.317)
2020-02-28 17:43:52.119  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 17:43:52.119 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 17:43:52.119  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 17:43:52.863  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.768 seconds (JVM running for 4199.255)
2020-02-28 17:44:14.566  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 17:44:14.566 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 17:44:14.566  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 17:44:15.174  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.63 seconds (JVM running for 4221.566)
2020-02-28 17:44:51.938  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 17:44:51.938 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 17:44:51.938  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 17:44:52.781  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.907 seconds (JVM running for 4259.172)
2020-02-28 17:45:05.529  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 17:45:05.529 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 17:45:05.529  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 17:45:06.221  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.713 seconds (JVM running for 4272.613)
2020-02-28 17:45:44.026  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 17:45:44.026 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 17:45:44.027  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 17:45:45.271  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 1.302 seconds (JVM running for 4311.663)
2020-02-28 17:45:53.609  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 17:45:53.609 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 17:45:53.609  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 17:45:54.547  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.965 seconds (JVM running for 4320.939)
2020-02-28 17:46:27.551  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 17:46:27.551 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 17:46:27.552  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 17:46:28.184  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.656 seconds (JVM running for 4354.577)
2020-02-28 18:08:31.434  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 18:08:31.434 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 18:08:31.434  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 18:08:32.078  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.669 seconds (JVM running for 5678.47)
2020-02-28 18:09:51.062  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 18:09:51.062 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 18:09:51.062  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 18:09:51.700  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.661 seconds (JVM running for 5758.092)
2020-02-28 18:12:47.521  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 18:12:47.575 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 18:12:47.575 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : ==> Parameters:
2020-02-28 18:12:47.579 DEBUG 3804 --- [http-nio-8080-exec-1] countTypes     : <==      Total: 1
2020-02-28 18:12:47.580 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 18:12:47.580 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 18:12:47.581 DEBUG 3804 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 18:12:47.581  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 18:12:49.198  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 3804 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 18:12:49.198 DEBUG 3804 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 18:12:49.198  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 18:12:49.979  INFO 3804 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.803 seconds (JVM running for 5936.37)
2020-02-28 18:12:50.127  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/logout', 请求参数='[org.apache.catalina.session.StandardSessionFacade@468ee6e2]', 请求方法='com.scxh.controller.LoginController.logout()', 请求类型='GET'}
2020-02-28 18:12:50.129  INFO 3804 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：index
2020-02-28 18:12:58.783  INFO 3804 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/logout', 请求参数='[org.apache.catalina.session.StandardSessionFacade@468ee6e2]', 请求方法='com.scxh.controller.LoginController.logout()', 请求类型='GET'}
2020-02-28 18:12:58.783  INFO 3804 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：index
2020-02-28 18:13:04.004  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 18:13:04.004  INFO 3804 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 18:13:15.543  INFO 14376 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 14376 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 18:13:15.545 DEBUG 14376 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 18:13:15.545  INFO 14376 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 18:13:18.183  INFO 14376 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 3.249 seconds (JVM running for 4.036)
2020-02-28 18:13:29.461  INFO 14376 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 18:13:29.466  INFO 14376 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 18:13:46.756  INFO 14376 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@339263b7]', 请求方法='com.scxh.controller.LoginController.doLogin()', 请求类型='POST'}
2020-02-28 18:13:46.756  INFO 14376 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 18:13:46
2020-02-28 18:13:46.941 DEBUG 14376 --- [http-nio-8080-exec-1] c.s.mapper.UserMapper.getUserByExample   : ==>  Preparing: select * from t_user WHERE username= ? 
2020-02-28 18:13:46.954 DEBUG 14376 --- [http-nio-8080-exec-1] c.s.mapper.UserMapper.getUserByExample   : ==> Parameters: NigSailStar(String)
2020-02-28 18:13:46.970 DEBUG 14376 --- [http-nio-8080-exec-1] c.s.mapper.UserMapper.getUserByExample   : <==      Total: 1
2020-02-28 18:13:47.109  INFO 14376 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：{"url":"/admin/index"}
2020-02-28 18:13:47.127  INFO 14376 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 18:13:47.128  INFO 14376 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 18:13:59.295  INFO 14376 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/logout', 请求参数='[org.apache.catalina.session.StandardSessionFacade@339263b7]', 请求方法='com.scxh.controller.LoginController.logout()', 请求类型='GET'}
2020-02-28 18:13:59.296  INFO 14376 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：index
2020-02-28 18:14:02.779  INFO 14376 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 18:14:02.780  INFO 14376 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 18:14:09.605  INFO 14376 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@6d7fb139]', 请求方法='com.scxh.controller.LoginController.doLogin()', 请求类型='POST'}
2020-02-28 18:14:09.605  INFO 14376 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 18:14:09
2020-02-28 18:14:09.605 DEBUG 14376 --- [http-nio-8080-exec-7] c.s.mapper.UserMapper.getUserByExample   : ==>  Preparing: select * from t_user WHERE username= ? 
2020-02-28 18:14:09.606 DEBUG 14376 --- [http-nio-8080-exec-7] c.s.mapper.UserMapper.getUserByExample   : ==> Parameters: NigSailStar(String)
2020-02-28 18:14:09.607 DEBUG 14376 --- [http-nio-8080-exec-7] c.s.mapper.UserMapper.getUserByExample   : <==      Total: 1
2020-02-28 18:14:09.608  INFO 14376 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：{"url":"/admin/index"}
2020-02-28 18:14:09.621  INFO 14376 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 18:14:09.621  INFO 14376 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 18:14:22.479  INFO 10204 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 10204 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 18:14:22.482 DEBUG 10204 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 18:14:22.482  INFO 10204 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 18:14:25.575  INFO 10204 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 3.68 seconds (JVM running for 4.556)
2020-02-28 18:14:25.750  INFO 10204 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/logout', 请求参数='[org.apache.catalina.session.StandardSessionFacade@5d7b3729]', 请求方法='com.scxh.controller.LoginController.logout()', 请求类型='GET'}
2020-02-28 18:14:25.755  INFO 10204 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：index
2020-02-28 18:15:15.350  INFO 10204 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 18:15:15.351  INFO 10204 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 18:15:33.983  INFO 10204 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@3ea9ad59]', 请求方法='com.scxh.controller.LoginController.doLogin()', 请求类型='POST'}
2020-02-28 18:15:33.984  INFO 10204 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 18:15:33
2020-02-28 18:18:06.996 DEBUG 10204 --- [http-nio-8080-exec-9] c.s.mapper.UserMapper.getUserByExample   : ==>  Preparing: select * from t_user WHERE username= ? 
2020-02-28 18:18:07.012 DEBUG 10204 --- [http-nio-8080-exec-9] c.s.mapper.UserMapper.getUserByExample   : ==> Parameters: NigSailStar(String)
2020-02-28 18:18:07.027 DEBUG 10204 --- [http-nio-8080-exec-9] c.s.mapper.UserMapper.getUserByExample   : <==      Total: 1
2020-02-28 18:18:07.064  INFO 10204 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：{"url":"/admin/index"}
2020-02-28 18:18:07.105  INFO 10204 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='127.0.0.1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 18:18:07.105  INFO 10204 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 18:18:11.001  INFO 10204 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 18:18:11.002  INFO 10204 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 18:18:13.849  INFO 10204 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 18:18:13.850  INFO 10204 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 18:18:20.855  INFO 10204 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@3ea9ad59]', 请求方法='com.scxh.controller.LoginController.doLogin()', 请求类型='POST'}
2020-02-28 18:18:20.856  INFO 10204 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 18:18:20
2020-02-28 18:18:34.783 DEBUG 10204 --- [http-nio-8080-exec-6] com.scxh.controller.LoginController      : 登录失败！原因：不要进行重复登录！
2020-02-28 18:18:34.783  INFO 10204 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：{"url":"/admin/login"}
2020-02-28 18:18:34.804  INFO 10204 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 18:18:34.805  INFO 10204 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 18:18:46.720  INFO 10204 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 18:18:46.721  INFO 10204 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 18:18:51.795  INFO 10204 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 18:18:51.796  INFO 10204 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 18:18:54.538  INFO 10204 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/logout', 请求参数='[org.apache.catalina.session.StandardSessionFacade@3ea9ad59]', 请求方法='com.scxh.controller.LoginController.logout()', 请求类型='GET'}
2020-02-28 18:18:54.539  INFO 10204 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：index
2020-02-28 18:18:58.016  INFO 10204 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 18:18:58.017  INFO 10204 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 18:19:03.115  INFO 10204 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=cef54e0f0995c8a631f8bb9a0065eea073bb7160, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@1c60029a]', 请求方法='com.scxh.controller.LoginController.doLogin()', 请求类型='POST'}
2020-02-28 18:19:03.115  INFO 10204 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 18:19:03
2020-02-28 18:19:24.168 DEBUG 10204 --- [http-nio-8080-exec-4] c.s.mapper.UserMapper.getUserByExample   : ==>  Preparing: select * from t_user WHERE username= ? 
2020-02-28 18:19:24.168 DEBUG 10204 --- [http-nio-8080-exec-4] c.s.mapper.UserMapper.getUserByExample   : ==> Parameters: NigSailStar(String)
2020-02-28 18:19:24.169 DEBUG 10204 --- [http-nio-8080-exec-4] c.s.mapper.UserMapper.getUserByExample   : <==      Total: 1
2020-02-28 18:19:24.171 DEBUG 10204 --- [http-nio-8080-exec-4] com.scxh.controller.LoginController      : 登录失败！原因：org.apache.shiro.authc.IncorrectCredentialsException: Submitted credentials for token [org.apache.shiro.authc.UsernamePasswordToken - NigSailStar, rememberMe=true] did not match the expected credentials.
2020-02-28 18:19:24.171  INFO 10204 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：{"message":"密码错误，请重新输入！","url":"/admin/login"}
2020-02-28 18:19:44.171  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 18:19:44.173 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 18:19:44.173  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 18:19:46.282  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 2.585 seconds (JVM running for 3.246)
2020-02-28 18:19:47.271  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 18:19:47.276  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 18:20:03.003  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 18:20:03.004  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 18:20:12.993  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@5c9994f9]', 请求方法='com.scxh.controller.LoginController.doLogin()', 请求类型='POST'}
2020-02-28 18:20:12.994  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 18:20:12
2020-02-28 18:20:13.164 DEBUG 8676 --- [http-nio-8080-exec-1] c.s.mapper.UserMapper.getUserByExample   : ==>  Preparing: select * from t_user WHERE username= ? 
2020-02-28 18:20:13.177 DEBUG 8676 --- [http-nio-8080-exec-1] c.s.mapper.UserMapper.getUserByExample   : ==> Parameters: NigSailStar(String)
2020-02-28 18:20:13.190 DEBUG 8676 --- [http-nio-8080-exec-1] c.s.mapper.UserMapper.getUserByExample   : <==      Total: 1
2020-02-28 18:20:13.226  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：{"url":"/admin/index"}
2020-02-28 18:20:13.241  INFO 8676 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 18:20:13.242  INFO 8676 --- [http-nio-8080-exec-4] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 18:20:28.373  INFO 8676 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 18:20:28.374  INFO 8676 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 18:20:30.090  INFO 8676 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 18:20:30.098 DEBUG 8676 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 18:20:30.099 DEBUG 8676 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 18:20:30.101 DEBUG 8676 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 18:20:30.103 DEBUG 8676 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 18:20:30.103 DEBUG 8676 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 18:20:30.104 DEBUG 8676 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 18:20:30.105  INFO 8676 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 18:21:23.875  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 18:21:23.876 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 18:21:23.876  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 18:21:24.573  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.729 seconds (JVM running for 101.538)
2020-02-28 18:22:12.402  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 18:22:12.403 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 18:22:12.403  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 18:22:13.061  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.689 seconds (JVM running for 150.025)
2020-02-28 21:51:48.393  WARN 8676 --- [http-nio-8080-exec-1] o.a.shiro.mgt.AbstractRememberMeManager  : There was a failure while trying to retrieve remembered principals.  This could be due to a configuration problem or corrupted principals.  This could also be due to a recently changed encryption key, if you are using a shiro.ini file, this property would be 'securityManager.rememberMeManager.cipherKey' see: http://shiro.apache.org/web.html#Web-RememberMeServices. The remembered identity will be forgotten and not used for this request.
2020-02-28 21:51:48.402  WARN 8676 --- [http-nio-8080-exec-1] o.a.shiro.mgt.DefaultSecurityManager     : Delegate RememberMeManager instance of type [org.apache.shiro.web.mgt.CookieRememberMeManager] threw an exception during getRememberedPrincipals().

org.apache.shiro.crypto.CryptoException: Unable to execute 'doFinal' with cipher instance [javax.crypto.Cipher@489eeaed].
	at org.apache.shiro.crypto.JcaCipherService.crypt(JcaCipherService.java:462)
	at org.apache.shiro.crypto.JcaCipherService.crypt(JcaCipherService.java:445)
	at org.apache.shiro.crypto.JcaCipherService.decrypt(JcaCipherService.java:390)
	at org.apache.shiro.crypto.JcaCipherService.decrypt(JcaCipherService.java:382)
	at org.apache.shiro.mgt.AbstractRememberMeManager.decrypt(AbstractRememberMeManager.java:482)
	at org.apache.shiro.mgt.AbstractRememberMeManager.convertBytesToPrincipals(AbstractRememberMeManager.java:419)
	at org.apache.shiro.mgt.AbstractRememberMeManager.getRememberedPrincipals(AbstractRememberMeManager.java:386)
	at org.apache.shiro.mgt.DefaultSecurityManager.getRememberedIdentity(DefaultSecurityManager.java:613)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolvePrincipals(DefaultSecurityManager.java:501)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:347)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:845)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: javax.crypto.AEADBadTagException: Tag mismatch!
	at com.sun.crypto.provider.GaloisCounterMode.decryptFinal(GaloisCounterMode.java:578)
	at com.sun.crypto.provider.CipherCore.finalNoPadding(CipherCore.java:1116)
	at com.sun.crypto.provider.CipherCore.fillOutputBuffer(CipherCore.java:1053)
	at com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:853)
	at com.sun.crypto.provider.AESCipher.engineDoFinal(AESCipher.java:446)
	at javax.crypto.Cipher.doFinal(Cipher.java:2164)
	at org.apache.shiro.crypto.JcaCipherService.crypt(JcaCipherService.java:459)
	... 44 common frames omitted

2020-02-28 21:51:48.431  INFO 8676 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 21:51:48.436  INFO 8676 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 21:51:49.608  INFO 8676 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 21:51:49.608  INFO 8676 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 21:51:53.814  INFO 8676 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 21:51:53.815  INFO 8676 --- [http-nio-8080-exec-6] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 21:51:55.439  INFO 8676 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 21:51:55.440  INFO 8676 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 21:51:56.538  INFO 8676 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.loginPage()', 请求类型='GET'}
2020-02-28 21:51:56.538  INFO 8676 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：admin/login
2020-02-28 21:52:55.862  INFO 8676 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/login', 请求参数='[User(id=null, nickname=null, username=NigSailStar, password=69df588959df3188649ae254ac8b76b9b6da6736, email=null, role=null, avatar=null, blogs=null, createTime=null, modifiedTime=null), org.apache.catalina.session.StandardSessionFacade@18bc779e]', 请求方法='com.scxh.controller.LoginController.doLogin()', 请求类型='POST'}
2020-02-28 21:52:55.863  INFO 8676 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 登录时间：2020-02-28 21:52:55
2020-02-28 21:52:55.909 DEBUG 8676 --- [http-nio-8080-exec-7] c.s.mapper.UserMapper.getUserByExample   : ==>  Preparing: select * from t_user WHERE username= ? 
2020-02-28 21:52:55.914 DEBUG 8676 --- [http-nio-8080-exec-7] c.s.mapper.UserMapper.getUserByExample   : ==> Parameters: NigSailStar(String)
2020-02-28 21:52:55.918 DEBUG 8676 --- [http-nio-8080-exec-7] c.s.mapper.UserMapper.getUserByExample   : <==      Total: 1
2020-02-28 21:52:55.920  INFO 8676 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：{"url":"/admin/index"}
2020-02-28 21:52:55.932  INFO 8676 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 21:52:55.933  INFO 8676 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 21:59:44.192  INFO 8676 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/index', 请求参数='[]', 请求方法='com.scxh.controller.LoginController.index()', 请求类型='GET'}
2020-02-28 21:59:44.192  INFO 8676 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/index
2020-02-28 22:05:36.254  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 22:05:36.254 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 22:05:36.254  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 22:05:37.314  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 1.092 seconds (JVM running for 13554.278)
2020-02-28 22:06:55.683  INFO 8676 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 22:06:55.713 DEBUG 8676 --- [http-nio-8080-exec-9] countTypes     : ==>  Preparing: select count(*) from t_type
2020-02-28 22:06:55.713 DEBUG 8676 --- [http-nio-8080-exec-9] countTypes     : ==> Parameters:
2020-02-28 22:06:55.716 DEBUG 8676 --- [http-nio-8080-exec-9] countTypes     : <==      Total: 1
2020-02-28 22:06:55.717 DEBUG 8676 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 22:06:55.717 DEBUG 8676 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 22:06:55.718 DEBUG 8676 --- [http-nio-8080-exec-9] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 22:06:55.719  INFO 8676 --- [http-nio-8080-exec-9] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 22:06:58.415  INFO 8676 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()', 请求类型='GET'}
2020-02-28 22:06:58.416  INFO 8676 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 22:10:50.312  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 22:10:50.312 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 22:10:50.312  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 22:10:50.987  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.696 seconds (JVM running for 13867.952)
2020-02-28 22:15:38.741  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 22:15:38.741 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 22:15:38.741  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 22:15:39.518  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.819 seconds (JVM running for 14156.482)
2020-02-28 22:16:08.165  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 22:16:08.165 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 22:16:08.165  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 22:16:08.808  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.666 seconds (JVM running for 14185.773)
2020-02-28 22:17:06.537  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 22:17:06.537 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 22:17:06.537  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 22:17:07.167  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.662 seconds (JVM running for 14244.131)
2020-02-28 22:26:36.987  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 22:26:37.022 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.typeCount     : ==>  Preparing: select count(*) from t_type 
2020-02-28 22:26:37.023 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.typeCount     : ==> Parameters: 
2020-02-28 22:26:37.025 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.typeCount     : <==      Total: 1
2020-02-28 22:26:37.026 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 22:26:37.026 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 22:26:37.027 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 22:26:37.027  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 22:26:38.041  INFO 8676 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[2]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 22:26:38.042 DEBUG 8676 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 22:26:38.042 DEBUG 8676 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 2(Integer)
2020-02-28 22:26:38.092 DEBUG 8676 --- [http-nio-8080-exec-3] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 22:26:38.092  INFO 8676 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：null
2020-02-28 22:26:39.630  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 22:26:39.630 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 22:26:39.630  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 22:26:40.408  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.805 seconds (JVM running for 14817.373)
2020-02-28 22:27:07.805  INFO 8676 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 22:27:07.839 DEBUG 8676 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.countTypes    : ==>  Preparing: select count(*) from t_type 
2020-02-28 22:27:07.839 DEBUG 8676 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.countTypes    : ==> Parameters: 
2020-02-28 22:27:07.840 DEBUG 8676 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.countTypes    : <==      Total: 1
2020-02-28 22:27:07.841 DEBUG 8676 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 22:27:07.841 DEBUG 8676 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 22:27:07.842 DEBUG 8676 --- [http-nio-8080-exec-3] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 22:27:07.843  INFO 8676 --- [http-nio-8080-exec-3] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 22:27:15.191  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input/', 请求参数='[]', 请求方法='com.scxh.controller.TypeController.typesInputPage()', 请求类型='GET'}
2020-02-28 22:27:15.192  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types-input
2020-02-28 22:27:17.076  INFO 8676 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[Type(id=null, name=167NotFound, blogs=null), {type=Type(id=null, name=167NotFound, blogs=null), org.springframework.validation.BindingResult.type=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]', 请求方法='com.scxh.controller.TypeController.saveType()', 请求类型='POST'}
2020-02-28 22:27:17.077 DEBUG 8676 --- [http-nio-8080-exec-2] c.s.mapper.TypeMapper.getTypeByExample   : ==>  Preparing: select * from t_type WHERE `name`=?, 
2020-02-28 22:27:17.077 DEBUG 8676 --- [http-nio-8080-exec-2] c.s.mapper.TypeMapper.getTypeByExample   : ==> Parameters: 167NotFound(String)
2020-02-28 22:27:17.257 ERROR 8676 --- [http-nio-8080-exec-2] .i.ControllerExceptionHandlerInterceptor : 错误！请求地址：http://localhost:8080/admin/types/input，请求方式：POST，Exception:org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 3
### The error may exist in file [C:\Users\血与酒\IdeaProjects\myblog\target\classes\mybatis\mapper\TypeMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select *         from t_type          WHERE  `name`=?,
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 3
[org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
 org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
 org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
 org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
 com.sun.proxy.$Proxy76.selectList(Unknown Source)
 org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
 org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
 org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
 org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
 com.sun.proxy.$Proxy146.getTypeByExample(Unknown Source)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
 org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
 com.sun.proxy.$Proxy147.getTypeByExample(Unknown Source)
 com.scxh.service.impl.TypeServiceImpl.getTypeByExample(TypeServiceImpl.java:37)
 com.scxh.service.impl.TypeServiceImpl$$FastClassBySpringCGLIB$$1ccc1947.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
 org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.service.impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$d018d252.getTypeByExample(<generated>)
 com.scxh.controller.TypeController.validateTypeParam(TypeController.java:75)
 com.scxh.controller.TypeController.saveType(TypeController.java:44)
 com.scxh.controller.TypeController$$FastClassBySpringCGLIB$$ac771607.invoke(<generated>)
 org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
 org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
 org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
 org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
 com.scxh.controller.TypeController$$EnhancerBySpringCGLIB$$d400445e.saveType(<generated>)
 sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 java.lang.reflect.Method.invoke(Method.java:498)
 org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
 org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
 org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
 org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
 org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
 org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
 org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
 org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
 org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
 org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
 javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
 org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
 org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
 org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
 org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
 org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
 org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
 org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
 org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
 org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
 org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
 org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
 org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
 org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
 org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
 org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
 org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
 org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
 org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 java.lang.Thread.run(Thread.java:748)]
2020-02-28 22:27:17.258  WARN 8676 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 3
### The error may exist in file [C:\Users\血与酒\IdeaProjects\myblog\target\classes\mybatis\mapper\TypeMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select *         from t_type          WHERE  `name`=?,
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 3]
2020-02-28 22:28:19.663  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 22:28:19.663 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 22:28:19.663  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 22:28:20.514  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.877 seconds (JVM running for 14917.479)
2020-02-28 22:29:03.899  INFO 8676 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[Type(id=null, name=167NotFound, blogs=null), {type=Type(id=null, name=167NotFound, blogs=null), org.springframework.validation.BindingResult.type=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]', 请求方法='com.scxh.controller.TypeController.saveType()', 请求类型='POST'}
2020-02-28 22:29:03.929 DEBUG 8676 --- [http-nio-8080-exec-8] c.s.mapper.TypeMapper.getTypeByExample   : ==>  Preparing: select * from t_type WHERE `name`=? 
2020-02-28 22:29:03.930 DEBUG 8676 --- [http-nio-8080-exec-8] c.s.mapper.TypeMapper.getTypeByExample   : ==> Parameters: 167NotFound(String)
2020-02-28 22:29:03.931 DEBUG 8676 --- [http-nio-8080-exec-8] c.s.mapper.TypeMapper.getTypeByExample   : <==      Total: 0
2020-02-28 22:29:03.932 DEBUG 8676 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.saveType      : ==>  Preparing: insert into t_type(name) VALUES (?); 
2020-02-28 22:29:03.932 DEBUG 8676 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.saveType      : ==> Parameters: 167NotFound(String)
2020-02-28 22:29:03.933 DEBUG 8676 --- [http-nio-8080-exec-8] com.scxh.mapper.TypeMapper.saveType      : <==    Updates: 1
2020-02-28 22:29:04.062  INFO 8676 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：redirect:/admin/types
2020-02-28 22:29:04.087  INFO 8676 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 22:29:04.088 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.countTypes    : ==>  Preparing: select count(*) from t_type 
2020-02-28 22:29:04.088 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.countTypes    : ==> Parameters: 
2020-02-28 22:29:04.088 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.countTypes    : <==      Total: 1
2020-02-28 22:29:04.089 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 22:29:04.090 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 22:29:04.090 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 22:29:04.091  INFO 8676 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 22:29:06.030  INFO 8676 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 22:29:06.030 DEBUG 8676 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.countTypes    : ==>  Preparing: select count(*) from t_type 
2020-02-28 22:29:06.031 DEBUG 8676 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.countTypes    : ==> Parameters: 
2020-02-28 22:29:06.031 DEBUG 8676 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.countTypes    : <==      Total: 1
2020-02-28 22:29:06.032 DEBUG 8676 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 22:29:06.032 DEBUG 8676 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 22:29:06.033 DEBUG 8676 --- [http-nio-8080-exec-5] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 22:29:06.033  INFO 8676 --- [http-nio-8080-exec-5] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 22:29:55.087  INFO 8676 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 22:29:55.087 DEBUG 8676 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.countTypes    : ==>  Preparing: select count(*) from t_type 
2020-02-28 22:29:55.088 DEBUG 8676 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.countTypes    : ==> Parameters: 
2020-02-28 22:29:55.089 DEBUG 8676 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.countTypes    : <==      Total: 1
2020-02-28 22:29:55.089 DEBUG 8676 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 22:29:55.089 DEBUG 8676 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 22:29:55.090 DEBUG 8676 --- [http-nio-8080-exec-7] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 22:29:55.090  INFO 8676 --- [http-nio-8080-exec-7] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 22:29:58.761  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 22:29:58.761 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 22:29:58.761  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 22:29:59.473  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.735 seconds (JVM running for 15016.437)
2020-02-28 22:30:02.556  INFO 8676 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 22:30:02.586 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.countTypes    : ==>  Preparing: select count(*) from t_type 
2020-02-28 22:30:02.586 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.countTypes    : ==> Parameters: 
2020-02-28 22:30:02.588 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.countTypes    : <==      Total: 1
2020-02-28 22:30:02.588 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 22:30:02.589 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 22:30:02.590 DEBUG 8676 --- [http-nio-8080-exec-2] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 2
2020-02-28 22:30:02.590  INFO 8676 --- [http-nio-8080-exec-2] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 22:30:14.680  INFO 8676 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types/input', 请求参数='[3]', 请求方法='com.scxh.controller.TypeController.removeType()', 请求类型='DELETE'}
2020-02-28 22:30:14.681 DEBUG 8676 --- [http-nio-8080-exec-8] c.scxh.mapper.TypeMapper.removeTypeById  : ==>  Preparing: delete from t_type where id=? 
2020-02-28 22:30:14.681 DEBUG 8676 --- [http-nio-8080-exec-8] c.scxh.mapper.TypeMapper.removeTypeById  : ==> Parameters: 3(Integer)
2020-02-28 22:30:14.740 DEBUG 8676 --- [http-nio-8080-exec-8] c.scxh.mapper.TypeMapper.removeTypeById  : <==    Updates: 1
2020-02-28 22:30:14.740  INFO 8676 --- [http-nio-8080-exec-8] com.scxh.aspect.LogAspect                : Result：null
2020-02-28 22:30:14.788 ERROR 8676 --- [http-nio-8080-exec-8] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-8] Exception processing template "admin/types/input": Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 22:30:14.875 ERROR 8676 --- [http-nio-8080-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template [admin/types/input], template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:869)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-28 22:31:43.244  INFO 8676 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 22:31:43.249 DEBUG 8676 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.countTypes    : ==>  Preparing: select count(*) from t_type 
2020-02-28 22:31:43.249 DEBUG 8676 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.countTypes    : ==> Parameters: 
2020-02-28 22:31:43.249 DEBUG 8676 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.countTypes    : <==      Total: 1
2020-02-28 22:31:43.249 DEBUG 8676 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 22:31:43.250 DEBUG 8676 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 22:31:43.251 DEBUG 8676 --- [http-nio-8080-exec-10] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 22:31:43.251  INFO 8676 --- [http-nio-8080-exec-10] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 22:31:44.771  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : 请求日志{请求ip地址='0:0:0:0:0:0:0:1', 请求地址='http://localhost:8080/admin/types', 请求参数='[{}]', 请求方法='com.scxh.controller.TypeController.typesPage()', 请求类型='GET'}
2020-02-28 22:31:44.776 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.countTypes    : ==>  Preparing: select count(*) from t_type 
2020-02-28 22:31:44.776 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.countTypes    : ==> Parameters: 
2020-02-28 22:31:44.777 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.countTypes    : <==      Total: 1
2020-02-28 22:31:44.777 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==>  Preparing: select * from t_type limit ? offSet ? 
2020-02-28 22:31:44.777 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : ==> Parameters: 8(Integer), 0(Integer)
2020-02-28 22:31:44.778 DEBUG 8676 --- [http-nio-8080-exec-1] com.scxh.mapper.TypeMapper.getTypeList   : <==      Total: 1
2020-02-28 22:31:44.778  INFO 8676 --- [http-nio-8080-exec-1] com.scxh.aspect.LogAspect                : Result：/admin/types
2020-02-28 22:31:46.501  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Starting MyblogApplication on DESKTOP-BJV1O2H with PID 8676 (started by 血与酒 in C:\Users\血与酒\IdeaProjects\myblog)
2020-02-28 22:31:46.501 DEBUG 8676 --- [restartedMain] com.scxh.MyblogApplication               : Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-02-28 22:31:46.501  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : The following profiles are active: dev
2020-02-28 22:31:47.419  INFO 8676 --- [restartedMain] com.scxh.MyblogApplication               : Started MyblogApplication in 0.943 seconds (JVM running for 15124.384)
